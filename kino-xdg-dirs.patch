diff --git a/scripts/publish/frame.sh b/scripts/publish/frame.sh
index 83af1c0..161ed25 100755
--- a/scripts/publish/frame.sh
+++ b/scripts/publish/frame.sh
@@ -8,8 +8,8 @@ project_title="$4"
 
 if [ -n "$KINO_HOME" ] && [ -f "$KINO_HOME"/publish/frame.sh ]; then
 	. "$KINO_HOME"/publish/frame.sh "$frame_file" "$project_id" "$scene_title" "$project_title"
-elif [ -f "$HOME"/kino/publish/frame.sh ]; then
-	. "$HOME"/kino/publish/frame.sh "$frame_file" "$project_id" "$scene_title" "$project_title"
+elif [ -f "$XDG_CONFIG_HOME"/kino/publish/frame.sh ]; then
+	. "$XDG_CONFIG_HOME"/kino/publish/frame.sh "$frame_file" "$project_id" "$scene_title" "$project_title"
 else
 	# detect terminal
 	GNOME_TERM=`gconftool-2 --get /desktop/gnome/applications/terminal/exec`
diff --git a/scripts/publish/project.sh b/scripts/publish/project.sh
index a30b020..eb9c15f 100755
--- a/scripts/publish/project.sh
+++ b/scripts/publish/project.sh
@@ -9,15 +9,15 @@ project_title="$3"
 if [ -f /etc/kino-scripts ]; then 
 	. /etc/kino-scripts
 fi
-if [ -f "$HOME"/.kino-scripts ]; then
-	. "$HOME"/.kino-scripts
+if [ -f "$XDG_CONFIG_HOME"/kino/kino-scripts ]; then
+	. "$XDG_CONFIG_HOME"/kino/kino-scripts
 fi
 
 
 if [ -n "$KINO_HOME" ] && [ -f "$KINO_HOME"/publish/project.sh ]; then
 	. "$KINO_HOME"/publish/project.sh "$project_file" "$project_id" "$project_title"
-elif [ -f "$HOME"/kino/publish/project.sh ]; then
-	. "$HOME"/kino/publish/project.sh "$project_file" "$project_id" "$project_title"
+elif [ -f "$XDG_CONFIG_HOME"/kino/publish/project.sh ]; then
+	. "$XDG_CONFIG_HOME"/kino/publish/project.sh "$project_file" "$project_id" "$project_title"
 elif [ -n "$KINO_PUBLISH_PROJECT" ]; then
 	"$KINO_PUBLISH_PROJECT" "$project_file" "$project_id" "$project_title"
 else
diff --git a/src/kino_av_pipe.cc b/src/kino_av_pipe.cc
index 0666b73..133b070 100644
--- a/src/kino_av_pipe.cc
+++ b/src/kino_av_pipe.cc
@@ -302,7 +302,7 @@ public:
 		if ( kinoHome )
 			homeFile = string( kinoHome ) + string( "/import/audio.sh" );
 		else
-			homeFile = string( getenv( "HOME" ) ) + string( "/kino/import/audio.sh" );
+			homeFile = string( getenv( "XDG_CONFIG_HOME" ) ) + string( "/kino/import/audio.sh" );
 		testHomeFile = open( homeFile.c_str(), O_RDONLY );
 		if ( testHomeFile > -1 )
 		{
diff --git a/src/kino_common.cc b/src/kino_common.cc
index 50c8301..3f4b95c 100644
--- a/src/kino_common.cc
+++ b/src/kino_common.cc
@@ -600,7 +600,7 @@ std::string KinoCommon::importFile( const char *filename )
 		if ( kinoHome )
 			homeFile = string( kinoHome ) + string( "/import/media.sh" );
 		else
-			homeFile = string( getenv( "HOME" ) ) + string( "/kino/import/media.sh" );
+			homeFile = string( getenv( "XDG_CONFIG_HOME" ) ) + string( "/kino/import/media.sh" );
 
 		gtk_window_set_transient_for( GTK_WINDOW( dialog ), GTK_WINDOW( getWidgetWindow( getWidget() ) ) );
 		gtk_progress_bar_set_fraction( progressBar, 0 );
diff --git a/src/page_export_mjpeg.cc b/src/page_export_mjpeg.cc
index 9400b40..d3b7fc3 100644
--- a/src/page_export_mjpeg.cc
+++ b/src/page_export_mjpeg.cc
@@ -140,7 +140,7 @@ ExportMJPEG::ExportMJPEG( PageExport *_exportPage, KinoCommon *_common ) :
 
 	// Load the extensible dvdauthor tools
 	loadTools( DATADIR "/kino/scripts/dvdauthor" );
-	string alternate_dir = string( getenv( "HOME" ) ) + string( "/kino/dvdauthor" );
+	string alternate_dir = string( getenv( "XDG_CONFIG_HOME" ) ) + string( "/kino/dvdauthor" );
 	loadTools( alternate_dir );
 
 	char *kinoHome=getenv("KINO_HOME");
diff --git a/src/page_export_pipe.cc b/src/page_export_pipe.cc
index 5f364a6..5398e00 100644
--- a/src/page_export_pipe.cc
+++ b/src/page_export_pipe.cc
@@ -146,7 +146,7 @@ ExportPipe::ExportPipe( PageExport *_exportPage, KinoCommon *_common ) :
 	cerr << "> Creating ExportPipe Page" << endl;
 
 	loadTools( DATADIR "/kino/scripts/exports" );
-	string alternate_dir = string( getenv( "HOME" ) ) + string( "/kino/exports" );
+	string alternate_dir = string( getenv( "XDG_CONFIG_HOME" ) ) + string( "/kino/exports" );
 	loadTools( alternate_dir );
 
 	char *kinoHome=getenv("KINO_HOME");
diff --git a/src/playlist.cc b/src/playlist.cc
index 3fd5a99..ed807ad 100644
--- a/src/playlist.cc
+++ b/src/playlist.cc
@@ -60,7 +60,7 @@ using std::map;
 #include "message.h"
 
 const xmlChar* SMIL20_NAMESPACE_HREF = reinterpret_cast< const xmlChar* >( "http://www.w3.org/2001/SMIL20/Language" );
-const string KINO_AUTOSAVE_DIR = string( getenv("HOME") ) + string( "/.kino-history" );
+const string KINO_AUTOSAVE_DIR = string( getenv("XDG_CACHE_HOME") ) + string( "/kino-history" );
 
 /** The file map implementation - this class is responsible for maintaining the list of
 	open files associated to a project.
diff --git a/src/preferences.cc b/src/preferences.cc
index 6d5fea0..bc39cf1 100644
--- a/src/preferences.cc
+++ b/src/preferences.cc
@@ -29,6 +29,8 @@
 #include <stdio.h>
 #include <errno.h>
 #include <string.h>
+#include <sys/stat.h>
+#include <glib.h>
 
 #include <string>
 using std::string;
@@ -41,6 +43,7 @@ using std::make_pair;
 static string kino_config_file()
 {
 	static string filename;
+	static string directory;
 
 	if(!filename.size())
 	{
@@ -49,7 +52,9 @@ static string kino_config_file()
 		if(kinoHome)
 			filename=string(kinoHome)+string("/kinorc");
 		else
-			filename = string( getenv( "HOME" ) ) + string( "/.kinorc" );
+			directory = string( getenv("XDG_CONFIG_HOME") ) + string( "/kino" );
+			mkdir( directory.c_str(), 0700 );
+			filename = directory + string( "/kinorc" );
 	}
 
 	return filename;
@@ -181,7 +186,7 @@ Preferences::Preferences() : phyID( -1 )
 	get( v4lInput, sizeof(v4lInput), "v4lInput", "PAL" );
 	get( v4lAudio, sizeof(v4lAudio), "v4lAudio", "32000" );
 	get( isOpenDML, "isOpenDML", "false" );
-	get( defaultDirectory, sizeof(defaultDirectory), "defaultDirectory", "~/" );
+	get( defaultDirectory, sizeof(defaultDirectory), "defaultDirectory", g_get_user_special_dir( G_USER_DIRECTORY_VIDEOS ) );
 	get( displayExtract, "displayExtract", "1" );
 	get( relativeSave, "relativeSave", "true" );
 	get( dvCaptureDevice, sizeof(dvCaptureDevice), "dvCaptureDevice", "/dev/dv1394/0" );
