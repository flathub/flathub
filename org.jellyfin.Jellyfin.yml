id: org.jellyfin.Jellyfin
runtime: org.freedesktop.Platform
runtime-version: "22.08"
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.dotnet6
  - org.freedesktop.Sdk.Extension.node14
  - org.freedesktop.Sdk.Extension.llvm15
separate-locales: false
command: jellyfin

cleanup:
  - /include
  # - /lib/cmake
  # - /lib/pkgconfig
  - /man
  - /share/man

finish-args:
  - --device=dri
  - --filesystem=/media:ro
  - --filesystem=/mnt:ro
  - --filesystem=/run/media:ro
  - --share=network
  # - --device=all # Needed for v4l2m2m
  # - --filesystem=home:ro
  # - --filesystem=host:ro
  # - --filesystem=xdg-download:ro
  # - --filesystem=xdg-music:ro
  # - --filesystem=xdg-pictures:ro
  # - --filesystem=xdg-videos:ro

modules:
  - name: jellyfin-ffmpeg
    disabled: false
    build-options:
      append-path: /usr/lib/sdk/llvm15/bin
      prepend-ld-library-path: /usr/lib/sdk/llvm15/lib
      arch:
        x86_64:
          config-opts:
            - --enable-libmfx # intel-mediasdk
    config-opts:
      - --disable-doc
      - --disable-ffplay
      - --disable-libxcb
      - --disable-ptx-compression
      - --disable-sdl2
      - --disable-shared
      - --disable-xlib
      - --enable-amf
      - --enable-chromaprint
      - --enable-cuda
      - --enable-cuda-llvm
      - --enable-cuvid
      - --enable-ffnvcodec
      - --enable-gmp
      - --enable-gnutls
      - --enable-gpl
      - --enable-libass
      - --enable-libbluray
      - --enable-libdav1d
      - --enable-libdrm
      - --enable-libfdk-aac
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libfribidi
      - --enable-libmp3lame
      - --enable-libopus
      - --enable-libplacebo
      - --enable-libshaderc
      - --enable-libsvtav1
      - --enable-libtheora
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-libwebp
      - --enable-libx264
      - --enable-libx265
      - --enable-libzimg
      - --enable-libzvbi
      # - --enable-lto
      - --enable-nvdec
      - --enable-nvenc
      - --enable-opencl
      - --enable-static
      - --enable-vaapi
      - --enable-version3
      - --enable-vulkan
      - --extra-libs=-lfftw3f
    sources:
      - type: archive
        url: https://github.com/jellyfin/jellyfin-ffmpeg/archive/refs/tags/v5.1.2-9.tar.gz
        sha256: 5eefa589d1fe7b8878f7fa4dd71a61b5902299e420cc9e0ef1a406d288feeeee
      - type: shell
        commands:
          - for n in $(cat debian/patches/series); do if [[ $n != "#"* ]]; then patch -Np1 -i "debian/patches/$n" -d .; fi; done
    modules:
      - shared-modules/linux-audio/fftw3f.json
      - name: chromaprint
        buildsystem: cmake-ninja
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DBUILD_SHARED_LIBS=ON
          - -DBUILD_TOOLS=OFF
          - -DBUILD_TESTS=OFF
          - -DFFT_LIB=fftw3f
        sources:
          - type: archive
            url: https://github.com/acoustid/chromaprint/releases/download/v1.5.1/chromaprint-1.5.1.tar.gz
            sha256: a1aad8fa3b8b18b78d3755b3767faff9abb67242e01b478ec9a64e190f335e1c
      - name: libass
        sources:
          - type: archive
            url: https://github.com/libass/libass/releases/download/0.16.0/libass-0.16.0.tar.gz
            sha256: fea8019b1887cab9ab00c1e58614b4ec2b1cee339b3f7e446f5fab01b032d430
      - name: libbluray
        config-opts:
          - --disable-bdjava-jar
        sources:
          - type: archive
            url: https://download.videolan.org/pub/videolan/libbluray/1.3.2/libbluray-1.3.2.tar.bz2
            sha256: 456814db9f07c1eecdef7e840fcbb20976ef814df875428bfb81ecf45851f170
      - name: intel-mediasdk
        only-arches:
          - x86_64
        buildsystem: cmake
        config-opts:
          - -DBUILD_SAMPLES=OFF
          - -DBUILD_TUTORIALS=OFF
          - -DENABLE_X11=OFF
        sources:
          - type: archive
            url: https://github.com/Intel-Media-SDK/MediaSDK/archive/refs/tags/intel-mediasdk-22.3.0.tar.gz
            sha256: e1e74229f409e969b70c2b35b1955068de3d40db85ecc42bd6ff501468bc76d7
      - name: shaderc
        buildsystem: cmake-ninja
        builddir: true
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DSHADERC_SKIP_TESTS=ON
          - -DSHADERC_SKIP_EXAMPLES=ON
          - -DSHADERC_SKIP_COPYRIGHT_CHECK=ON
          - -DBUILD_SHARED_LIBS=OFF
        cleanup:
          - /bin
          - /include
          - /lib/cmake
          - /lib/pkgconfig
        post-install:
          - install -D /lib/$(gcc --print-multiarch)/libSPIRV*.so /app/lib
        sources:
          - type: archive
            url: https://github.com/google/shaderc/archive/refs/tags/v2022.2.tar.gz
            sha256: 517d36937c406858164673db696dc1d9c7be7ef0960fbf2965bfef768f46b8c0
          - type: shell
            commands:
              - sed -i 's|SPIRV/GlslangToSpv.h|glslang/SPIRV/GlslangToSpv.h|' libshaderc_util/src/compiler.cc
              - sed -i 's|add_subdirectory(third_party)||' CMakeLists.txt
              - sed -i 's|add_custom_target(build-version|set(NOT_USE|' CMakeLists.txt
              - |
                LIB=/lib/$(gcc --print-multiarch)
                VER_MATCH="[0-9]+\.[^\. ]+"
                SHADERC=$(grep -m1 -oP "^v$VER_MATCH" CHANGES)
                SPIRV=v$(grep -oP "(?<=Version:.)$VER_MATCH" $LIB/pkgconfig/SPIRV-Tools-shared.pc)
                GLSLANG=v$(realpath $LIB/libglslang.so | grep -oP "(?<=so.)$VER_MATCH")
                cat <<- EOF > glslc/src/build-version.inc
                  "shaderc $SHADERC"
                  "spirv-tools $SPIRV"
                  "glslang $GLSLANG"
                EOF
              - cat glslc/src/build-version.inc
      - name: libplacebo
        buildsystem: meson
        config-opts:
          - --buildtype=release
          - --default-library=shared
          - -Dvulkan=enabled
          - -Dshaderc=enabled
          - -Dglslang=disabled
          - -Ddemos=false
          - -Dtests=false
          - -Dbench=false
          - -Dfuzz=false
        sources:
          - type: archive
            url: https://code.videolan.org/videolan/libplacebo/-/archive/v4.208.0/libplacebo-v4.208.0.tar.gz
            sha256: 7b3c857934ee3d30f743e43d7f0606e10950806661ea0ea385f8a1f06cbab854
      - name: x264
        config-opts:
          - --disable-cli
          - --enable-shared
        sources:
          - type: git
            url: https://code.videolan.org/videolan/x264.git
            commit: eaa68fad9e5d201d42fde51665f2d137ae96baf0
      - name: x265
        # Does it need numa?
        buildsystem: cmake-ninja
        builddir: true
        subdir: source
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DENABLE_CLI=OFF
        sources:
          - type: archive
            url: https://bitbucket.org/multicoreware/x265_git/downloads/x265_3.5.tar.gz
            sha256: e70a3335cacacbba0b3a20ec6fecd6783932288ebc8163ad74bcc9606477cae8
      - name: zimg
        sources:
          - type: archive
            url: https://github.com/sekrit-twc/zimg/archive/refs/tags/release-3.0.4.tar.gz
            sha256: 219d1bc6b7fde1355d72c9b406ebd730a4aed9c21da779660f0a4c851243e32f
      - name: zvbi
        sources:
          - type: archive
            url: https://github.com/zapping-vbi/zvbi/archive/refs/tags/v0.2.41.tar.gz
            sha256: 568c59b237bb58b46495e1f8e9bbe778e45ba89b4cd856506aa4c8f0a131eccc
      - name: khronos-opencl-headers
        buildsystem: cmake-ninja
        sources:
          - type: archive
            url: https://github.com/KhronosGroup/OpenCL-Headers/archive/refs/tags/v2022.05.18.tar.gz
            sha256: 88a1177853b279eaf574e2aafad26a84be1a6f615ab1b00c20d5af2ace95c42e
      - name: nv-codec-headers
        no-autogen: true
        make-install-args:
          - PREFIX=${FLATPAK_DEST}
        cleanup:
          - "*"
        sources:
          - type: git
            url: https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
            commit: 84483da70d903239d4536763fde8c7e6c4e80784
      - name: amf
        buildsystem: simple
        build-commands:
          - mkdir -p $FLATPAK_DEST/include
          - mv amf/public/include $FLATPAK_DEST/include/AMF
        cleanup:
          - "*"
        sources:
          - type: archive
            url: https://github.com/GPUOpen-LibrariesAndSDKs/AMF/archive/refs/tags/v1.4.28.tar.gz
            sha256: 22524c74ca47686a61e9d385b66bbb4735b680274f7c7d8ca3c3b6d2877ec00a
      - name: svt-av1
        buildsystem: cmake-ninja
        build-options:
          arch:
            x86_64:
              config-opts:
                - -DENABLE_AVX512=ON
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DBUILD_SHARED_LIBS=ON
          - -DBUILD_TESTING=OFF
          - -DBUILD_APPS=OFF
          - -DBUILD_DEC=OFF
        builddir: true
        sources:
          - type: archive
            url: https://gitlab.com/AOMediaCodec/SVT-AV1/-/archive/v1.2.1/SVT-AV1-v1.2.1.tar.gz
            sha256: 5c2466eb2990fa045b29c63b92a2b5f13d9cb841709df5e7206f96a59e119fdd

  - name: jellyfin-web
    disabled: false
    buildsystem: simple
    build-options:
      append-path: /usr/lib/sdk/node14/bin
    build-commands:
      - npm ci --no-audit --offline --cache=$FLATPAK_BUILDER_BUILDDIR/flatpak-node/npm-cache
      - mkdir -p $FLATPAK_DEST/bin/jellyfin-web
      - cp -r dist/* $FLATPAK_DEST/bin/jellyfin-web
    sources:
      - npm-generated-sources.json
      - type: archive
        url: https://github.com/jellyfin/jellyfin-web/archive/refs/tags/v10.8.9.tar.gz
        sha256: 3b0909aa2b7e44e7efd3cc65210bb1f024330affaa65cc6604631600f2c5bfb6

  - name: jellyfin
    disabled: false
    buildsystem: simple
    build-options:
      append-ld-library-path: /usr/lib/sdk/dotnet6/lib
      append-path: /usr/lib/sdk/dotnet6/bin
      append-pkg-config-path: /usr/lib/sdk/dotnet6/lib/pkgconfig
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: "true"
      arch:
        x86_64:
          env:
            RUNTIME: linux-x64
        aarch64:
          env:
            RUNTIME: linux-arm64
    build-commands:
      - mkdir -p $FLATPAK_DEST/bin
      - dotnet publish -c Release --source ./nuget-sources --output="$FLATPAK_DEST/bin" --runtime $RUNTIME
        -p:DebugSymbols=false -p:DebugType=none --self-contained true Jellyfin.Server/Jellyfin.Server.csproj
    sources:
      - nuget-generated-sources-x64.json
      - nuget-generated-sources-arm64.json
      - type: archive
        url: https://github.com/jellyfin/jellyfin/archive/refs/tags/v10.8.9.tar.gz
        sha256: 374840a1e134f4c33660837289a5248cf6d88fe4f706385af12f7a8b6ccb6f0a
