diff --git a/source/build/include/smmalloc.h b/source/build/include/smmalloc.h
index 4fa90d268..802967edf 100644
--- a/source/build/include/smmalloc.h
+++ b/source/build/include/smmalloc.h
@@ -685,7 +685,9 @@ struct TlsPoolBucket
     }
 };

-static_assert(std::is_pod<TlsPoolBucket>::value == true, "TlsPoolBucket must be POD type, stored in TLS");
+// Remove excessive warning spam on builds so actual errors don't get buried
+static_assert(std::is_standard_layout<TlsPoolBucket>::value == true, "TlsPoolBucket must be POD type, stored in TLS");
+static_assert(std::is_trivial<TlsPoolBucket>::value == true, "TlsPoolBucket must be POD type, stored in TLS");
 static_assert(sizeof(TlsPoolBucket) <= 64, "TlsPoolBucket sizeof must be less than CPU cache line");
 } // namespace internal

diff --git a/Common.mak b/Common.mak
index 4212d2aad..cb554f9ac 100644
--- a/Common.mak
+++ b/Common.mak
@@ -536,7 +536,7 @@ else ifeq ($(SUBPLATFORM),LINUX)
 endif
 ASFLAGS += -f $(ASFORMAT)

-COMPILERFLAGS += -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
+COMPILERFLAGS += -D_FORTIFY_SOURCE=2


 ##### Optimizations
diff --git a/source/build/src/engine.cpp b/source/build/src/engine.cpp
index 18a0aa67a..6769b5b2c 100644
--- a/source/build/src/engine.cpp
+++ b/source/build/src/engine.cpp
@@ -13400,7 +13400,9 @@ int32_t krd_print(const char *filename)
     if (!krd_enabled) return 1;
     krd_enabled = 0;

-    fp = buildvfs_fopen_write(filename);
+    // not actually sure where this gets used or what for...
+    LOG_F(INFO, "engine::krd_print: %s\n", filename)
+    fp = buildvfs_fopen_write(get_writable_filename(filename).c_str());
     if (!fp) { OSD_Printf("krd_print (2): fopen"); return 1; }

     for (i=0; i<krd_numcalls; i++)
