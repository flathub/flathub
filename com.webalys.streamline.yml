app-id: com.webalys.streamline
runtime: org.freedesktop.Platform
runtime-version: '21.08'
sdk: org.freedesktop.Sdk
# Use the Electron 2 BaseApp, which adds several common libraries we'll need.
base: org.electronjs.Electron2.BaseApp
base-version: '21.08'
# Add the Node 10 SDK extension.
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node10
# Electron doesn't use a traditional locale format so separate-locales is useless.
separate-locales: false
command: start-electron-webpack-quick-start
finish-args:
  # These two lines add Xorg access for graphics.
  - '--share=ipc'
  - '--socket=x11'
  # Sound access.
  - '--socket=pulseaudio'
  # Network access.
  - '--share=network'
  # If you need to access the filesystem, also add:
  - '--filesystem=home'
modules:
  # With electron-webpack and electron-builder we don't install Node to /app/node,
  # because electron-builder will bundle everything for us in one piece.
  # Instead we jump straight to the quick start module.

  # However, since this quick start uses yarn, we do have to install that.
  - name: yarn
    buildsystem: simple
    build-commands:
      - 'cp -a * /app'
    # Only used for building, so clean it up afterwards.
    cleanup:
      - '*'
    sources:
      - type: archive
        url: https://github.com/yarnpkg/yarn/releases/download/v1.19.1/yarn-v1.19.1.tar.gz
        sha256: 34293da6266f2aae9690d59c2d764056053ff7eebc56b80b8df05010c3da9343

  - name: electron-webpack-quick-start
    buildsystem: simple
    build-options:
      # Add the node bin directory & yarn directory.
      append-path: '/usr/lib/sdk/node10/bin:/app/yarn/bin'
      env:
        # Set the Electron cache directory.
        # (The directory format is: /run/build/MODULE_NAME/flatpak-node/electron-cache)
        ELECTRON_CACHE: '/run/build/electron-webpack-quick-start/flatpak-node/electron-cache'
        # Sets the directory where Node is located so way npm won't download the headers.
        npm_config_nodedir: '/usr/lib/sdk/node10'
    build-commands:
      # Have Yarn use the offline mirror.
      - 'HOME=$PWD yarn config --offline set yarn-offline-mirror $FLATPAK_BUILDER_BUILDDIR/flatpak-node/yarn-mirror'
      # Download the packages.
      - 'yarn --offline'
      # If you were using npm with electron-webpack/electron-builder, then the above two commands
      # would look more like the npm commands in the vanilla-quick-start manifest, just without
      # the --prefix.

      # Run electron-builder, passing the architecture arguments to it.
      # Note that the -- is important; without that, the argument will be passed to
      # yarn instead of electron-builder.
      - '. flatpak-node/electron-builder-arch-args.sh; yarn run --offline dist:dir -- $ELECTRON_BUILDER_ARCH_ARGS'
      # Copy the resulting, unpacked directory to /app.
      # (A glob is used because the directory name may contain the current arch.)
      - 'cp -r dist/linux*unpacked /app/electron-webpack-quick-start'
      # If you passed --electron-non-patented-ffmpeg, you could install it like this:
      # - 'install -Dm 755 flatpak-node/libffmpeg.so -t /app/electron-webpack-quick-start'
      # Install the wrapper script to start it.
      - 'install -Dm 755 start-electron-webpack-quick-start.sh /app/bin/start-electron-webpack-quick-start'
    sources:
      - type: git
        url: https://github.com/webalys-hq/streamline-web
        commit: c3a32c71423cf2200c2b49c6ba2c764ad2935240
      # Add the flatpak-node-generator generated sources.
      - generated-sources.json
      # Our runner script.
      - type: script
        dest-filename: start-electron-webpack-quick-start.sh
        commands:
          - '/app/electron-webpack-quick-start/electron-webpack-quick-start'