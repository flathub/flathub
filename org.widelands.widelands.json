{
    "app-id": "org.widelands.widelands",
    "runtime": "org.freedesktop.Platform",
    "runtime-version": "1.6",
    "sdk": "org.freedesktop.Sdk",
    "command": "widelands",
    "rename-icon": "widelands",
    "rename-desktop-file": "widelands.desktop",
    "rename-appdata-file": "widelands.appdata.xml",
    "finish-args": [
        "--share=ipc",
        "--socket=x11",
        "--socket=pulseaudio",
        "--share=network",
        "--persist=.widelands",
        "--device=dri"
    ],
    "build-options" : {
        "cflags": "-O2 -g -Wno-deprecated-declarations -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "cxxflags": "-O2 -g -Wno-deprecated-declarations -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "ldflags": "-fstack-protector-strong -Wl,-z,relro,-z,now",
        "env": {
            "V": "1"
        }
    },
    "modules": [
        {
            "name": "xmlstarlet",
            "config-opts": [
                "--disable-static-libs",
                "--with-libxml-libs-prefix=/usr/lib",
                "--with-libxml-include-prefix=/usr/include/libxml2",
                "--prefix=/app/opt/xmlstarlet",
                "--exec-prefix=/app/opt/xmlstarlet"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "http://downloads.sourceforge.net/xmlstar/xmlstarlet-1.6.1.tar.gz",
                    "sha256": "15d838c4f3375332fd95554619179b69e4ec91418a3a5296e7c631b7ed19e7ca"
                },
                {
                    "type": "patch",
                    "path": "xmlstarlet-1.6.1-nogit.patch",
                    "strip-components": 1,
                    "sha256": "c54485c5e2bd038219884250228333113a9751e999baa28a833a679f79421890"
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'fix configure: xml2 & xslt';",
                        "sed -r -i 's/^([[:blank:]]*XSTAR_LIB_CHECK[[:blank:]]*\\(\\[LIBXML\\],[[:blank:]]*\\[)xml2-config(\\]\\))/\\1pkg-config libxml-2.0\\2/' 'configure.ac';",
                        "sed -r -i 's/^([[:blank:]]*XSTAR_LIB_CHECK[[:blank:]]*\\(\\[LIBXSLT\\],[[:blank:]]*\\[)xslt-config(\\]\\))/\\1pkg-config libxslt\\2/' 'configure.ac';",
                        "grep -Ei 'XSTAR_LIB_CHECK' 'configure.ac' || :;"
                    ]
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'fix configure: xml2 & xslt version';",
                        "sed -r -i 's/^(\\[LIBXML_REQUIRED_VERSION=)/#\\1/' 'configure.ac';",
                        "sed -r -i 's/^(\\[LIBXSLT_REQUIRED_VERSION=)/#\\1/' 'configure.ac';",
                        "grep -Ei '_REQUIRED_VERSION' 'configure.ac' || :;"
                    ]
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'autoreconf';",
                        "cp -p /usr/share/automake-*/config.{sub,guess} .;",
                        "autoreconf -i;"
                    ]
                }
            ],
            "post-install": [
                "echo 'post-install: symlink';",
                "[[ -f '/app/opt/xmlstarlet/bin/xmlstarlet' ]] || ln -s 'xml' '/app/opt/xmlstarlet/bin/xmlstarlet';",
                "echo 'post-install: docs';",
                "install -d '/app/opt/xmlstarlet/share/doc/xmlstarlet'; install -p -m 0644 'AUTHORS' 'ChangeLog' 'INSTALL' 'NEWS' 'README' 'TODO' '/app/opt/xmlstarlet/share/doc/xmlstarlet/';",
                "echo 'post-install: licenses';",
                "install -d '/app/opt/xmlstarlet/share/licenses/xmlstarlet'; install -p -m 0644 'COPYING' 'Copyright' '/app/opt/xmlstarlet/share/licenses/xmlstarlet/';"
            ],
            "cleanup": [
                "/opt/xmlstarlet/share/doc",
                "/opt/xmlstarlet/share/man"
            ]
        },
        {
            "name": "imagemagick",
            "no-parallel-make": true,
            "config-opts": [
                "--enable-shared",
                "--disable-static",
                "--with-modules",
                "--with-x",
                "--with-threads",
                "--with-magick_plus_plus",
                "--with-gslib",
                "--with-wmf",
                "--with-webp",
                "--with-openexr",
                "--with-rsvg",
                "--with-xml",
                "--with-jbig",
                "--with-openjp2",
                "--prefix=/app/opt/imagemagick",
                "--exec-prefix=/app/opt/imagemagick"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://www.imagemagick.org/download/ImageMagick-6.9.10-3.tar.xz",
                    "sha256": "92d15a4b617583998ce10dfa7aa85da2c5c216b4052a2d454aa50d07ee1e585a"
                },
                {
                    "type": "patch",
                    "path": "ImageMagick-6.9.9-3-multiarch-implicit-pkgconfig-dir.patch",
                    "strip-components": 1,
                    "sha256": "80eea73e19a47cdb322d9006d4fe4a868db0d0d43fd7a0c9ae1a5e2fbbdbfe4b"
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'copy examples';",
                        "mkdir 'Magick++/examples'; cp -p Magick++/demo/*.cpp Magick++/demo/*.miff Magick++/examples;"
                    ]
                }
            ],
            "post-install": [
                "echo 'post-install: docs';",
                "install -d '/app/opt/imagemagick/share/doc/imagemagick'; install -p -m 0644 'AUTHORS.txt' 'ChangeLog' 'Install-mac.txt' 'Install-unix.txt' 'Install-vms.txt' 'Install-windows.txt' 'NEWS.txt' 'NOTICE' 'Platforms.txt' 'README.txt' 'QuickStart.txt' '/app/opt/imagemagick/share/doc/imagemagick/';",
                "install -d '/app/opt/imagemagick/share/doc/imagemagick/Magick++'; install -p -m 0644 'Magick++/AUTHORS' 'Magick++/ChangeLog' 'Magick++/NEWS' 'Magick++/README' '/app/opt/imagemagick/share/doc/imagemagick/Magick++/';",
                "install -d '/app/opt/imagemagick/share/doc/imagemagick/Magick++/examples'; install -p -m 0644 Magick++/examples/* '/app/opt/imagemagick/share/doc/imagemagick/Magick++/examples/';",
                "echo 'post-install: licenses';",
                "install -d '/app/opt/imagemagick/share/licenses/imagemagick'; install -p -m 0644 'LICENSE' '/app/opt/imagemagick/share/licenses/imagemagick/';",
                "install -d '/app/opt/imagemagick/share/licenses/imagemagick/Magick++'; install -p -m 0644 'www/Magick++/COPYING' '/app/opt/imagemagick/share/licenses/imagemagick/Magick++/';"
            ],
            "cleanup": [
                "/opt/imagemagick/share/doc",
                "/opt/imagemagick/share/man"
            ]
        },
        "shared-modules/lua5.3/lua-5.3.2.json",
        "shared-modules/glu/glu-9.0.0.json",
        "shared-modules/glew/glew.json",
        {
            "name": "boost",
            "sources": [
                {
                    "type": "archive",
                    "url": "https://dl.bintray.com/boostorg/release/1.67.0/source/boost_1_67_0.tar.bz2",
                    "sha256": "2684c972994ee57fc5632e03bf044746f6eb45d4920c343937a465fd67a5adba"
                },
                {
                    "type": "script",
                    "commands": [
                        "./bootstrap.sh --prefix=/app --with-libraries=filesystem,system,signals,regex,test;"
                    ],
                    "dest-filename": "configure"
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'all:\n\t./b2 headers;\n\ninstall:\n\t./b2 install;\n' > 'Makefile';"
                    ]
                }
            ]
        },
        {
            "name": "widelands",
            "buildsystem": "cmake",
            "builddir": true,
            "config-opts": [
                "-DCMAKE_BUILD_TYPE=Release",
                "-DCMAKE_INSTALL_PREFIX=/app/bin",
                "-DWL_INSTALL_BASEDIR=/app/share/widelands",
                "-DWL_INSTALL_DATADIR=/app/share/widelands",
                "-DBOOST_ROOT=/app",
                "-DGLEW_ROOT=/app",
                "-DGLEW_GLEW_LIBRARY=/app/lib/libGLEW.so",
                "-DGLEW_INCLUDE_DIR=/app/include/GL",
                "-DGLEW_LIBRARY:FILEPATH=/app/lib/libGLEW.a",
                "-DOPENGL_glu_LIBRARY=/app/lib/libGLU.a",
                "-DOPTION_BUILD_WEBSITE_TOOLS=OFF"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://launchpad.net/widelands/build19/build19/+download/widelands-build19-src-gcc7.tar.bz2",
                    "sha256": "ef73b8cf5a7c680bad5caade907f1cc6ee88dd3729470b9214a3c72658585458"
                },
                {
                    "type": "file",
                    "path": "widelands.svg",
                    "sha256": "4f860318acb3271b7cf6dcc6ba53fa265977d66894597195bea3b82d35b22335"
                },
                {
                    "type": "patch",
                    "path": "widelands-build19-icu-bidi.patch",
                    "strip-components": 1,
                    "sha256": "651f6d7ea6843752032872c4a20014418d52c5fa01dc72d4ede1d4f030206742"
                },
                {
                    "type": "script",
                    "commands": [
                        "app_name='widelands';",
                        "app_id='org.widelands.widelands';"
                    ],
                    "dest-filename": "flatpak_setup"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'create icons';
                        imagemagick_home='/app/opt/imagemagick';
                        imagemagick_lib=\"${imagemagick_home}/lib\";
                        imagemagick_bin=\"${imagemagick_home}/bin\";
                        if [[ -n \"${LD_LIBRARY_PATH}\" ]]; then
                            LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${imagemagick_lib}\";
                        else
                            LD_LIBRARY_PATH=\"${imagemagick_lib}\";
                        fi;
                        export LD_LIBRARY_PATH;
                        if [[ -n \"${PATH}\" ]]; then
                            PATH=\"${PATH}:${imagemagick_bin}\";
                        else
                            PATH=\"${imagemagick_bin}\";
                        fi;
                        export PATH;
                        icon=\"${app_name}.svg\";
                        for s in {16,22,24,32,48,64,72,96,128,192,256,512}; do
                            size=\"${s}x${s}\";
                            echo \"- ${size}\";
                            mkdir -p \"icons/${size}/\";
                            convert -background none -density 1024 -resize \"${size}\" \"${icon}\" \"icons/${size}/${app_name}.png\";
                        done;
                        echo;"
                    ],
                    "dest-filename": "flatpak_create_icons"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'create desktop';
                        cp \"debian/${app_id}.desktop\" \"${app_name}.desktop\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_create_desktop"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'create appdata';
                        cp \"debian/${app_name}.appdata.xml\" \"${app_name}.appdata.xml\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_create_appdata"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'edit desktop';
                        desktop-file-edit --set-key='Icon' --set-value=\"${app_name}\" \"${app_name}.desktop\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_edit_desktop"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'edit appdata';
                        xmlstarlet_home='/app/opt/xmlstarlet';
                        xmlstarlet_bin=\"${xmlstarlet_home}/bin\";
                        if [[ -n \"${PATH}\" ]]; then
                            PATH=\"${PATH}:${xmlstarlet_bin}\";
                        else
                            PATH=\"${xmlstarlet_bin}\";
                        fi;
                        export PATH;
                        xmlstarlet ed --inplace -d '/component/releases/release[position()>1]' \"${app_name}.appdata.xml\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_edit_appdata"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install icons';
                        find 'icons' -mindepth 2 -maxdepth 2 -type f -name \"${app_name}.png\" | sort -V | xargs -I{} dirname '{}' | xargs -I{} basename '{}' | while read -r size ; do
                            install -p -D -m 0644 \"icons/${size}/${app_name}.png\" \"/app/share/icons/hicolor/${size}/apps/${app_name}.png\";
                        done;
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_icons"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install pixmaps';
                        install -d \"/app/share/pixmaps\";
                        ln -s \"../${app_name}/images/logos/wl-logo-64.png\" \"/app/share/pixmaps/${app_name}.png\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_pixmaps"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install desktop';
                        install -p -D -m 0644 \"${app_name}.desktop\" \"/app/share/applications/${app_name}.desktop\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_desktop"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install appdata';
                        install -p -D -m 0644 \"${app_name}.appdata.xml\" \"/app/share/metainfo/${app_name}.appdata.xml\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_appdata"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install docs';
                        install -d \"/app/share/doc/${app_name}\";
                        install -p -m 0644 \"ChangeLog\" \"CREDITS\" \"WL_RELEASE\" \"/app/share/doc/${app_name}/\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_docs"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install licenses';
                        install -d \"/app/share/licenses/${app_name}\";
                        install -p -m 0644 \"COPYING\" \"/app/share/licenses/${app_name}/\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_install_licenses"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'check desktop';
                        desktop-file-validate \"/app/share/applications/${app_name}.desktop\";
                        echo \"status: ${?}\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_check_desktop"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'check appdata';
                        appstream-util validate-relax --nonet \"/app/share/metainfo/${app_name}.appdata.xml\";
                        echo \"status: ${?}\";
                        echo;"
                    ],
                    "dest-filename": "flatpak_check_appdata"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'create';
                        ./flatpak_create_icons;
                        ./flatpak_create_desktop;
                        ./flatpak_create_appdata;
                        echo;"
                    ],
                    "dest-filename": "flatpak_create"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'edit';
                        ./flatpak_edit_desktop;
                        ./flatpak_edit_appdata;
                        echo;"
                    ],
                    "dest-filename": "flatpak_edit"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'install';
                        ./flatpak_install_icons;
                        ./flatpak_install_pixmaps;
                        ./flatpak_install_desktop;
                        ./flatpak_install_appdata;
                        ./flatpak_install_docs;
                        ./flatpak_install_licenses;
                        echo;"
                    ],
                    "dest-filename": "flatpak_install"
                },
                {
                    "type": "script",
                    "commands": [
                        "cd \"$( dirname \"$( readlink -f \"${0}\" )\" )\";",
                        "source './flatpak_setup';",
                        "echo 'check';
                        ./flatpak_check_desktop;
                        ./flatpak_check_appdata;
                        echo;"
                    ],
                    "dest-filename": "flatpak_check"
                },
                {
                    "type": "shell",
                    "commands": [
                        "echo 'flatpak scripts: create & edit';
                        ./flatpak_create;
                        ./flatpak_edit;
                        echo;"
                    ]
                }
            ],
            "post-install": [
                "echo 'flatpak scripts: install & check';
                [[ \"$( basename \"$( readlink -f . )\" )\" != \"_flatpak_build\" ]] || cd ..;
                pwd;
                ./flatpak_install;
                ./flatpak_check;
                echo;"
            ],
            "cleanup": [
                "bin/wl_render_richtext"
            ]
        }
    ],
    "cleanup": [
        "/include",
        "/lib/pkgconfig",
        "/share/cmake",
        "/man",
        "/share/man",
        "/share/bash-completion",
        "/lib/systemd",
        "/opt",
        "*.la",
        "*.a"
    ]
}
