name: luajit
no-autogen: true
make-install-args:
  - PREFIX=/app
sources:
  - type: archive
    url: http://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz
    sha256: 1ad2e34b111c802f9d0cdf019e986909123237a28c746b21295b63c9e785d9c3
  # Fix LJ_MAX_JSLOTS assertion in rec_check_slots()
  # https://github.com/LuaJIT/LuaJIT/commit/1c89933f129dde76944336c6bfd05297b8d67730
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0001-Fix-LJ_MAX_JSLOTS-assertion-in-rec_check_slots.patch
  - type: patch
    path: luajit-Fix-LJ_MAX_JSLOTS-assertion-in-rec_check_slots.patch
  # Add missing LJ_MAX_JSLOTS check
  # https://github.com/LuaJIT/LuaJIT/commit/630ff3196a06353c6a7ccd1e9ac3958f4a8ca13c
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0002-Add-missing-LJ_MAX_JSLOTS-check.patch
  - type: patch
    path: luajit-Add-missing-LJ_MAX_JSLOTS-check.patch
  # x64/LJ_GC64: Fix emit_rma()
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0009-x64-LJ_GC64-Fix-emit_rma.patch
  - type: patch
    path: luajit-x64-LJ_GC64-Fix-emit_rma.patch
  # x64/LJ_GC64: Fix fallback case of asm_fuseloadk64()
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0012-x64-LJ_GC64-Fix-fallback-case-of-asm_fuseloadk64.patch
  - type: patch
    path: luajit-x64-LJ_GC64-Fix-fallback-case-of-asm_fuseloadk64.patch
  # x64/LJ_GC64: Fix type-check-only variant of SLOAD
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0014-x64-LJ_GC64-Fix-type-check-only-variant-of-SLOAD.patch
  - type: patch
    path: luajit-x64-LJ_GC64-Fix-type-check-only-variant-of-SLOAD.patch
  # DynASM/x86: Fix potential REL_A overflow
  # https://github.com/LuaJIT/LuaJIT/commit/0c0e7b168ea147866835954267c151ef789f64fb
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0016-DynASM-x86-Fix-potential-REL_A-overflow.patch
  - type: patch
    path: luajit-DynASM-x86-Fix-potential-REL_A-overflow.patch
  # LJ_GC64: Fix ir_khash for non-string GCobj
  # https://github.com/LuaJIT/LuaJIT/pull/356
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0017-LJ_GC64-Fix-ir_khash-for-non-string-GCobj.patch
  - type: patch
    path: luajit-LJ_GC64-Fix-ir_khash-for-non-string-GCobj.patch
  # LJ_GC64: Make ASMREF_L references 64 bit
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0018-LJ_GC64-Make-ASMREF_L-references-64-bit.patch
  - type: patch
    path: luajit-LJ_GC64-Make-ASMREF_L-references-64-bit.patch
  # Fix FOLD rule for strength reduction of widening
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0019-Fix-FOLD-rule-for-strength-reduction-of-widening.patch
  - type: patch
    path: luajit-Fix-FOLD-rule-for-strength-reduction-of-widening.patch
  # ARM64: Fix assembly of HREFK
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0020-ARM64-Fix-assembly-of-HREFK.patch
  - type: patch
    path: luajit-ARM64-Fix-assembly-of-HREFK.patch
  # ARM64: Fix xpcall() error case
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0022-ARM64-Fix-xpcall-error-case.patch
  - type: patch
    path: luajit-ARM64-Fix-xpcall-error-case.patch
  # Fix saved bytecode encapsulated in ELF objects
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0023-Fix-saved-bytecode-encapsulated-in-ELF-objects.patch
  - type: patch
    path: luajit-Fix-saved-bytecode-encapsulated-in-ELF-objects.patch
  # ARM64: Fix xpcall() error case (really)
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0024-ARM64-Fix-xpcall-error-case-really.patch
  - type: patch
    path: luajit-ARM64-Fix-xpcall-error-case-really.patch
  # Fix IR_BUFPUT assembly
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0026-Fix-IR_BUFPUT-assembly.patch
  - type: patch
    path: luajit-Fix-IR_BUFPUT-assembly.patch
  # Fix ARMv8 (32 bit subset) detection
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0028-Fix-ARMv8-32-bit-subset-detection.patch
  - type: patch
    path: luajit-Fix-ARMv8-32-bit-subset-detection.patch
  # FFI: Don't assert on #1LL (5.2 compatibility mode only)
  # https://github.com/LuaJIT/LuaJIT/commit/b03a56f28ec360bbcf43091afd0607890a4a33c7
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0031-FFI-Don-t-assert-on-1LL-5.2-compatibility-mode-only.patch
  - type: patch
    path: luajit-FFI-Don-t-assert-on-1LL-5.2-compatibility-mode-only.patch
  # Fix GCC 7 -Wimplicit-fallthrough warnings
  # https://github.com/LuaJIT/LuaJIT/commit/d4ee80342770d1281e2ce877f8ae8ab1d99e6528
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0032-Fix-GCC-7-Wimplicit-fallthrough-warnings.patch
  - type: patch
    path: luajit-Fix-GCC-7-Wimplicit-fallthrough-warnings.patch
  # Clear stack after print_jit_status() in CLI
  # https://github.com/LuaJIT/LuaJIT/commit/03cd5aa749c1bc3bb4b7d4289236b6096cb3dc85
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0033-Clear-stack-after-print_jit_status-in-CLI.patch
  - type: patch
    path: luajit-Clear-stack-after-print_jit_status-in-CLI.patch
  # Fix rechaining of pseudo-resurrected string keys
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0034-Fix-rechaining-of-pseudo-resurrected-string-keys.patch
  - type: patch
    path: luajit-Fix-rechaining-of-pseudo-resurrected-string-keys.patch
  # DynASM/x86: Add BMI1 and BMI2 instructions
  # https://github.com/LuaJIT/LuaJIT/pull/399
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0035-DynASM-x86-Add-BMI1-and-BMI2-instructions.patch
  - type: patch
    path: luajit-DynASM-x86-Add-BMI1-and-BMI2-instructions.patch
  # Give expected results for negative non-base-10 numbers in tonumber()
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0036-Give-expected-results-for-negative-non-base-10-numbe.patch
  - type: patch
    path: luajit-Give-expected-results-for-negative-non-base-10-numbers-in-tonumber.patch
  # FFI: Add tonumber() specialization for failed
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0037-FFI-Add-tonumber-specialization-for-failed-conversio.patch
  - type: patch
    path: luajit-FFI-Add-tonumber-specialization-for-failed-conversions.patch
  # x86/x64: Check for jcc when using xor r,r in emit_loadi()
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0040-x86-x64-Check-for-jcc-when-using-xor-r-r-in-emit_loa.patch
  - type: patch
    path: luajit-x86-x64-Check-for-jcc-when-using-xor-r-r-in-emit_loadi.patch
  # DynASM/x86: Add FMA3 instructions
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0042-DynASM-x86-Add-FMA3-instructions.patch
  - type: patch
    path: luajit-DynASM-x86-Add-FMA3-instructions.patch
  # x86: Disassemble FMA3 instructions
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0043-x86-Disassemble-FMA3-instructions.patch
  - type: patch
    path: luajit-x86-Disassemble-FMA3-instructions.patch
  # From Lua 5.3: assert() accepts any type of error
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0044-From-Lua-5.3-assert-accepts-any-type-of-error-object.patch
  - type: patch
    path: luajit-From-Lua-5.3-assert-accepts-any-type-of-error-object.patch
  # ARM64: Fix write barrier in BC_USETS
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0046-ARM64-Fix-write-barrier-in-BC_USETS.patch
  - type: patch
    path: luajit-ARM64-Fix-write-barrier-in-BC_USETS.patch
  # ARM64: Fix exit stub patching
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0047-ARM64-Fix-exit-stub-patching.patch
  - type: patch
    path: luajit-ARM64-Fix-exit-stub-patching.patch
  # DynASM: Fix warning
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0048-DynASM-Fix-warning.patch
  - type: patch
    path: luajit-DynASM-Fix-warning.patch
  # DynASM/x86: Fix vroundps/vroundpd encoding
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0049-DynASM-x86-Fix-vroundps-vroundpd-encoding.patch
  - type: patch
    path: luajit-DynASM-x86-Fix-vroundps-vroundpd-encoding.patch
  # Fix memory probing allocator to check for valid end address, too
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0050-Fix-memory-probing-allocator-to-check-for-valid-end-.patch
  - type: patch
    path: luajit-Fix-memory-probing-allocator-to-check-for-valid-end-address.patch
  # Actually implement maxirconst trace limit
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0052-Actually-implement-maxirconst-trace-limit.patch
  - type: patch
    path: luajit-Actually-implement-maxirconst-trace-limit.patch
  # Fix overflow of snapshot map offset
  # https://github.com/LuaJIT/LuaJIT/commit/380e4409a70725df85034f02c968b6ebd7a5e513
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0054-Fix-overflow-of-snapshot-map-offset.patch
  - type: patch
    path: luajit-Fix-overflow-of-snapshot-map-offset.patch
  # Fix os.date() for wider libc strftime() compatibility
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0058-Fix-os.date-for-wider-libc-strftime-compatibility.patch
  - type: patch
    path: luajit-Fix-os.date-for-wider-libc-strftime-compatibility.patch
  # Improve luaL_addlstring()
  # https://github.com/raptorjit/raptorjit/pull/206
  # https://github.com/LuaJIT/LuaJIT/pull/464
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0059-Improve-luaL_addlstring.patch
  - type: patch
    path: luajit-Improve-luaL_addlstring.patch
  # Fix arm64 register allocation issue for XLOAD
  # https://github.com/openresty/luajit2/pull/53
  # https://github.com/LuaJIT/LuaJIT/pull/438
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0060-Fix-arm64-register-allocation-issue-for-XLOAD.patch
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0061-Fix-arm64-register-allocation-issue-for-XLOAD.patch
  - type: patch
    path: luajit-Fix-arm64-register-allocation-issue-for-XLOAD.patch
  # Remove redundant emit_check_ofs
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0062-Remove-redundant-emit_check_ofs.patch
  - type: patch
    path: luajit-Remove-redundant-emit_check_ofs.patch
  # aarch64: Using the xzr register for store inputs and the second operand of arithmetic operations frees up a register for use elsewhere
  # https://github.com/LuaJIT/LuaJIT/pull/482
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0063-aarch64-Use-the-xzr-register-whenever-possible.patch
  - type: patch
    path: luajit-aarch64-Use-the-xzr-register-whenever-possible.patch
  # Add support for FNMADD and FNMSUB
  # https://github.com/LuaJIT/LuaJIT/pull/478
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0065-Add-support-for-FNMADD-and-FNMSUB.patch
  - type: patch
    path: luajit-Add-support-for-FNMADD-and-FNMSUB.patch
  # Fix os.date() for timezone change awareness
  # https://github.com/LuaJIT/LuaJIT/pull/473
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0066-Fix-os.date-for-timezone-change-awareness.patch
  - type: patch
    path: luajit-Fix-os.date-for-timezone-change-awareness.patch
  # Guard against undefined behaviour when casting from float to unsigned
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0069-Guard-against-undefined-behaviour-when-casting-from-.patch
  - type: patch
    path: luajit-Guard-against-undefined-behaviour-when-casting-from-float-to-unsigned.patch
  # Fix build erro with fnmsub fusing
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0070-Fix-build-erro-with-fnmsub-fusing.patch
  - type: patch
    path: luajit-Fix-build-erro-with-fnmsub-fusing.patch
  # aarch64: better float to unsigned int conversion
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0071-aarch64-better-float-to-unsigned-int-conversion.patch
  - type: patch
    path: luajit-aarch64-better-float-to-unsigned-int-conversion.patch
  # Better behaviour for float to uint32_t conversions
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/0072-Better-behaviour-for-float-to-uint32_t-conversions.patch
  - type: patch
    path: luajit-Better-behaviour-for-float-to-uint32_t-conversions.patch
  # arm: Fix up condition codes for conditional arithmetic insn
  # https://github.com/LuaJIT/LuaJIT/pull/497
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/arm-Fix-up-condition-codes-for-conditional-arithmeti.patch
  - type: patch
    path: luajit-arm-Fix-up-condition-codes-for-conditional-arithmetic-insn.patch
  # bugfix: fixed a segfault when unsinking 64-bit pointers
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/bugfix-fixed-a-segfault-when-unsinking-64-bit-pointers.patch
  - type: patch
    path: luajit-bugfix-fixed-a-segfault-when-unsinking-64-bit-pointers.patch
  # Add various features thanks to openresty
  # https://src.fedoraproject.org/rpms/luajit/blob/0f267e9eeae9db830b952a62a354ae8d126291a8/f/luajit-openresty-features.patch
  - type: patch
    path: luajit-openresty-features.patch
  # Force -DLUAJIT_ENABLE_LUA52COMPAT
  # configure: error: LuaJIT must be compiled in Lua 5.2 mode
  - type: patch
    path: luajit-LUA52COMPAT.patch
post-install:
  - ln -s "luajit-2.1.0-beta3" "${FLATPAK_DEST}/bin/luajit" ||:;
  - ln -s "luajit" "${FLATPAK_DEST}/bin/lua" ||:;
  - install -p -D -m 0644 "COPYRIGHT" -t "${FLATPAK_DEST}/share/licenses/luajit/";
