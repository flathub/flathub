--- ./configure.ac
+++ ./configure.ac
@@ -1226,47 +1226,13 @@

 ### Check for PCRE regex library.

-PCRE_LIBS=
-
-pcre_fail_msg="to build Octave, you must have the PCRE library and header files installed"
-
-AC_CHECK_HEADERS([pcre.h pcre/pcre.h])
-
-AC_CACHE_CHECK([whether pcre.h defines the macros we need],
-  [ac_cv_pcre_h_macros_present],
-  [AC_EGREP_CPP([PCRE_HAS_MACROS_WE_NEED], [
-    #if defined (HAVE_PCRE_H)
-    # include <pcre.h>
-    #elif defined (HAVE_PCRE_PCRE_H)
-    # include <pcre/pcre.h>
-    #error "NO PCRE HEADER"
-    #endif
-    #if defined (PCRE_INFO_NAMECOUNT) \
-      && defined (PCRE_INFO_NAMEENTRYSIZE) \
-      && defined (PCRE_INFO_NAMETABLE)
-      PCRE_HAS_MACROS_WE_NEED
-    #endif],
-    ac_cv_pcre_h_macros_present=yes, ac_cv_pcre_h_macros_present=no)])
-
-if test $ac_cv_pcre_h_macros_present = yes; then
-  ## check for pcre-config, and if so, get build variables
-  AC_CHECK_PROG(HAVE_PCRE_CONFIG, pcre-config, [yes], [no])
-  if test $HAVE_PCRE_CONFIG = yes; then
-    PCRE_CPPFLAGS=`pcre-config --cflags`
-    PCRE_LIBS=`pcre-config --libs`
-  else
-    PCRE_LIBS="-lpcre"
-  fi
-  save_LIBS="$LIBS"
-  LIBS="$PCRE_LIBS $LIBS"
-  AC_CHECK_FUNCS([pcre_compile],
-    [AC_SUBST(PCRE_CPPFLAGS)
-     AC_SUBST(PCRE_LIBS)],
-    [AC_MSG_ERROR([$pcre_fail_msg])])
-  LIBS="$save_LIBS"
-else
-  AC_MSG_ERROR([$pcre_fail_msg])
-fi
+  PKG_CHECK_MODULES([PCRE], [libpcre], [
+    AC_DEFINE(HAVE_PCRE_H, 1, [Define if you have PCRE library])
+    LIBS="$LIBS $PCRE_LIBS"
+    CPPFLAGS="$CPPFLAGS $PCRE_CFLAGS"
+  ], [
+    AC_MSG_WARN([$PCRE_PKG_ERRORS])
+   ])

 ### Check for ZLIB library.
