From 451dd27fb6c8a0ff69b31e316e110df48c78086a Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Wed, 3 Aug 2016 23:47:07 +0100
Subject: [PATCH] Enable building with C++-11 and C++-14

This patch is a forward-port of the backport patch found on the cern git:

https://gitlab.cern.ch/GENSER/lcgcmakeII/blob/master/externals/patches/Qt-4.8.4.patch

Yay science.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h | 4 ++++
 src/3rdparty/javascriptcore/JavaScriptCore/runtime/Structure.h   | 2 +-
 src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h       | 2 +-
 src/3rdparty/javascriptcore/JavaScriptCore/wtf/TypeTraits.h      | 5 ++++-
 4 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h
index 053b4c0..8fb2fd5 100644
--- a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h
@@ -36,6 +36,10 @@
 #include <stdarg.h>
 #include <stdint.h>
 #include <stdlib.h>
+#if __cplusplus >= 201103L
+#include <cmath>
+using std::signbit;
+#endif
 
 namespace JSC {
 
diff --git a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Structure.h b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Structure.h
index 7571efc..1fea6d7 100644
--- a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Structure.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Structure.h
@@ -210,7 +210,7 @@ namespace JSC {
         bool m_isPinnedPropertyTable : 1;
         bool m_hasGetterSetterProperties : 1;
         bool m_hasNonEnumerableProperties : 1;
-#if COMPILER(WINSCW)
+#if COMPILER(WINSCW) || __cplusplus >= 201103L
         // Workaround for Symbian WINSCW compiler that cannot resolve unsigned type of the declared 
         // bitfield, when used as argument in make_pair() function calls in structure.ccp.
         // This bitfield optimization is insignificant for the Symbian emulator target.
diff --git a/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h b/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h
index 42a9233..c84f0e8 100644
--- a/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h
@@ -257,7 +257,7 @@ namespace WTF {
 
     using std::swap;
 
-#if !COMPILER(MSVC) && !OS(QNX) && !defined(_LIBCPP_VERSION)
+#if !COMPILER(MSVC) && !OS(QNX) && __cplusplus < 201103L
     // The Dinkumware C++ library (used by MSVC and QNX) and clang's libc++ have a swap for pairs defined.
 
     // swap pairs by component, in case of pair members that specialize swap
diff --git a/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TypeTraits.h b/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TypeTraits.h
index 7ba487f..6aaeca3 100644
--- a/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TypeTraits.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TypeTraits.h
@@ -166,8 +166,11 @@ namespace WTF {
         typedef T Type;
     };
 
-#if (defined(__GLIBCXX__) && (__GLIBCXX__ >= 20070724) && defined(__GXX_EXPERIMENTAL_CXX0X__)) || (defined(_MSC_VER) && (_MSC_VER >= 1600))
+#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
+    template<typename T> struct HasTrivialConstructor : public std::is_trivially_constructible<T> { };
+    template<typename T> struct HasTrivialDestructor : public std::is_trivially_destructible<T> { };
 
+#elif (defined(__GLIBCXX__) && (__GLIBCXX__ >= 20070724) && defined(__GXX_EXPERIMENTAL_CXX0X__)) || (defined(_MSC_VER) && (_MSC_VER >= 1600))
     // GCC's libstdc++ 20070724 and later supports C++ TR1 type_traits in the std namespace.
     // VC10 (VS2010) and later support C++ TR1 type_traits in the std::tr1 namespace.
     template<typename T> struct HasTrivialConstructor : public std::tr1::has_trivial_constructor<T> { };
-- 
2.9.2

--- qt-everywhere-opensource-src-4.8.7/src/3rdparty/javascriptcore/JavaScriptCore/yarr/RegexCompiler.cpp.orig	2017-10-19 21:49:36.384834048 +0200
+++ qt-everywhere-opensource-src-4.8.7/src/3rdparty/javascriptcore/JavaScriptCore/yarr/RegexCompiler.cpp	2017-10-19 21:49:51.987834387 +0200
@@ -719,7 +719,7 @@
 
     constructor.setupOffsets();
 
-    return false;
+    return NULL;
 };
 
  
