From 8fced778265f844b037e1aec4d9857398d8c857a Mon Sep 17 00:00:00 2001
From: manongjohn <19245851+manongjohn@users.noreply.github.com>
Date: Tue, 26 Dec 2023 01:32:50 -0500
Subject: [PATCH 1/3] Fix system variable prefix to all uppercase

---
 toonz/sources/common/tapptools/tenv.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/toonz/sources/common/tapptools/tenv.cpp b/toonz/sources/common/tapptools/tenv.cpp
index 0eabbee5d..effa299e1 100644
--- a/toonz/sources/common/tapptools/tenv.cpp
+++ b/toonz/sources/common/tapptools/tenv.cpp
@@ -185,7 +185,7 @@ class EnvGlobals {  // singleton
     // from v1.3, registry root is moved to SOFTWARE\\Tahoma\\Tahoma
     m_registryRoot = TFilePath("SOFTWARE\\Tahoma2D\\") + m_version.getAppName();
 #endif
-    m_systemVarPrefix = m_version.getAppName();
+    m_systemVarPrefix = toUpper(m_version.getAppName());
     updateEnvFile();
   }
 

From 0d4015b81c002b3eb6e8cb8f68fe9cf33f8c1bd8 Mon Sep 17 00:00:00 2001
From: manongjohn <19245851+manongjohn@users.noreply.github.com>
Date: Tue, 26 Dec 2023 01:35:19 -0500
Subject: [PATCH 2/3] Fix missed TOONZ prefix replacement with TAHOMA2D

---
 toonz/sources/common/tapptools/tenv.cpp   | 10 +++++-----
 toonz/sources/include/tenv.h              |  2 +-
 toonz/sources/tcleanupper/tcleanupper.cpp |  4 ++--
 toonz/sources/tcomposer/tcomposer.cpp     |  4 ++--
 toonz/sources/tconverter/tconverter.cpp   |  4 ++--
 toonz/sources/toonz/main.cpp              |  6 +++---
 6 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/toonz/sources/common/tapptools/tenv.cpp b/toonz/sources/common/tapptools/tenv.cpp
index effa299e1..4a733d54b 100644
--- a/toonz/sources/common/tapptools/tenv.cpp
+++ b/toonz/sources/common/tapptools/tenv.cpp
@@ -112,7 +112,7 @@ class EnvGlobals {  // singleton
 #else
     TFilePath systemVarPath = getSystemVarPath(varName);
     if (systemVarPath.isEmpty()) {
-      std::cout << "varName:" << varName << " TOONZROOT not set..."
+      std::cout << "varName:" << varName << " TAHOMA2DROOT not set..."
                 << std::endl;
       return "";
     }
@@ -122,13 +122,13 @@ class EnvGlobals {  // singleton
                         if (!value)
                                 {
                                 std::cout << varName << " not set, returning
-   TOONZROOT" << std::endl;
-        //value = getenv("TOONZROOT");
+   TAHOMA2DROOT" << std::endl;
+        //value = getenv("TAHOMA2DROOT");
                         value="";
                         std::cout << "!!!value= "<< value << std::endl;
                         if (!value)
                                         {
-                                        std::cout << varName << "TOONZROOT not
+                                        std::cout << varName << "TAHOMA2DROOT not
    set..." << std::endl;
                                         //exit(-1);
                                         return "";
@@ -642,7 +642,7 @@ void TEnv::loadAllEnvVariables() { VariableSet::instance()->load(); }
 
 bool TEnv::setArgPathValue(std::string key, std::string value) {
   EnvGlobals *eg = EnvGlobals::instance();
-  // in case of "-TOONZROOT" , set the all unregistered paths
+  // in case of "-TAHOMA2DROOT" , set the all unregistered paths
   if (key == getRootVarName()) {
     TFilePath rootPath(value);
     eg->setStuffDir(rootPath);
diff --git a/toonz/sources/include/tenv.h b/toonz/sources/include/tenv.h
index a837ab783..f9323d7c6 100644
--- a/toonz/sources/include/tenv.h
+++ b/toonz/sources/include/tenv.h
@@ -138,7 +138,7 @@ DVAPI TFilePath getConfigDir();
 // DVAPI TFilePath getProfilesDir();
 DVAPI TFilePath getWorkingDirectory();
 
-// per l'utilizzo di ToonzLib senza che sia definita una TOONZROOT
+// per l'utilizzo di ToonzLib senza che sia definita una TAHOMA2DROOT
 // bisogna chiamare TEnv::setStuffDir(stuffdir) prima di ogni altra operazione
 DVAPI void setStuffDir(const TFilePath &stuffDir);
 
diff --git a/toonz/sources/tcleanupper/tcleanupper.cpp b/toonz/sources/tcleanupper/tcleanupper.cpp
index 9cf901559..31b4de56a 100644
--- a/toonz/sources/tcleanupper/tcleanupper.cpp
+++ b/toonz/sources/tcleanupper/tcleanupper.cpp
@@ -63,8 +63,8 @@ inline ostream &operator<<(ostream &out, const TFilePath &fp) {
 //------------------------------------------------------------------------
 namespace {
 
-const char *rootVarName     = "TOONZROOT";
-const char *systemVarPrefix = "TOONZ";
+const char *rootVarName     = "TAHOMA2DROOT";
+const char *systemVarPrefix = "TAHOMA2D";
 
 namespace {
 
diff --git a/toonz/sources/tcomposer/tcomposer.cpp b/toonz/sources/tcomposer/tcomposer.cpp
index 2a6c2cc9a..140e54669 100644
--- a/toonz/sources/tcomposer/tcomposer.cpp
+++ b/toonz/sources/tcomposer/tcomposer.cpp
@@ -113,8 +113,8 @@ namespace {
 //   (es <systemVarPrefix>PROJECTS etc.)
 //
 
-const char *rootVarName     = "TOONZROOT";
-const char *systemVarPrefix = "TOONZ";
+const char *rootVarName     = "TAHOMA2DROOT";
+const char *systemVarPrefix = "TAHOMA2D";
 
 // TODO: forse anche questo andrebbe in tnzbase
 // ci possono essere altri programmi offline oltre al tcomposer
diff --git a/toonz/sources/tconverter/tconverter.cpp b/toonz/sources/tconverter/tconverter.cpp
index b6da3ccd8..4fd356e09 100644
--- a/toonz/sources/tconverter/tconverter.cpp
+++ b/toonz/sources/tconverter/tconverter.cpp
@@ -41,8 +41,8 @@ typedef QualifierT<TFilePath> FilePathQualifier;
 
 #define RENDER_LICENSE_NOT_FOUND 888
 
-const char *rootVarName     = "TOONZROOT";
-const char *systemVarPrefix = "TOONZ";
+const char *rootVarName     = "TAHOMA2DROOT";
+const char *systemVarPrefix = "TAHOMA2D";
 
 namespace {
 
diff --git a/toonz/sources/toonz/main.cpp b/toonz/sources/toonz/main.cpp
index e1622fff4..e2bbc321e 100644
--- a/toonz/sources/toonz/main.cpp
+++ b/toonz/sources/toonz/main.cpp
@@ -169,10 +169,10 @@ static void initToonzEnv(QHash<QString, QString> &argPathValues) {
   QCoreApplication::setApplicationName(
       QString::fromStdString(TEnv::getApplicationName()));
 
-  /*-- TOONZROOTのPathの確認 --*/
+  /*-- TAHOMA2DROOTのPathの確認 --*/
   // controllo se la xxxroot e' definita e corrisponde ad un folder esistente
 
-  /*-- ENGLISH: Confirm TOONZROOT Path
+  /*-- ENGLISH: Confirm TAHOMA2DROOT Path
         Check if the xxxroot is defined and corresponds to an existing folder
   --*/
 
@@ -214,7 +214,7 @@ static void initToonzEnv(QHash<QString, QString> &argPathValues) {
   // for (it = projectsRoots.begin(); it != projectsRoots.end(); ++it)
   //  projectManager->addProjectsRoot(*it);
 
-  /*-- もしまだ無ければ、TOONZROOT/sandboxにsandboxプロジェクトを作る --*/
+  /*-- もしまだ無ければ、TAHOMA2DROOT/sandboxにsandboxプロジェクトを作る --*/
   projectManager->createSandboxIfNeeded();
 
   /*

From 7607845440efe86a48eb90c5c6fc17727853b589 Mon Sep 17 00:00:00 2001
From: manongjohn <19245851+manongjohn@users.noreply.github.com>
Date: Tue, 26 Dec 2023 01:36:11 -0500
Subject: [PATCH 3/3] Fix linux tahoma2d launch script

---
 toonz/sources/toonz/CMakeLists.txt | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/toonz/sources/toonz/CMakeLists.txt b/toonz/sources/toonz/CMakeLists.txt
index d279d2649..52a85e5f9 100644
--- a/toonz/sources/toonz/CMakeLists.txt
+++ b/toonz/sources/toonz/CMakeLists.txt
@@ -701,13 +701,30 @@ TAHOMA2DCONFIG=\"\$HOME/.config/Tahoma2D/stuff/config\"
 TAHOMA2DFXPRESETS=\"\$HOME/.config/Tahoma2D/stuff/fxs\"
 TAHOMA2DLIBRARY=\"\$HOME/.config/Tahoma2D/stuff/library\"
 TAHOMA2DPROJECTS=\"$HOME/.config/Tahoma2D/stuff/projects\"
-TAHOMA2DROOT=\"\$HOME/.config/Tahoma2D/stuff\"
 TAHOMA2DSTUDIOPALETTE=\"\$HOME/.config/Tahoma2D/stuff/studiopalette\"
 EOF
 fi
 
 export ${PRELOAD_VARIABLE}=\${TAHOMA2D_BASE}/lib/tahoma2d:\${${PRELOAD_VARIABLE}}
 
+IFS=:
+for LIBPATH in \$LD_LIBRARY_PATH
+do
+  if [ \"\$CAMLIBS\" = \"\" -a -d \$LIBPATH/libgphoto2 ]
+  then
+     export CAMLIBS=`find \$LIBPATH/libgphoto2 -mindepth 1 -type d`
+  fi
+
+  if [ \"\$IOLIBS\" = \"\" -a -d \$LIBPATH/libgphoto2_port ]
+  then
+     export IOLIBS=`find \$LIBPATH/libgphoto2_port -mindepth 1 -type d`
+  fi
+done
+unset IFS
+
+echo \"CAMLIBS: \$CAMLIBS\"
+echo \"IOLIBS: \$IOLIBS\"
+
 exec \$TAHOMA2D_BASE/bin/Tahoma2D \"\$@\"
 ")
     # only needed for executing without installing
