diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3698be1..86e3cf3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -47,24 +47,6 @@ set(Boost_USE_STATIC_LIBS ON)
 set(Boost_USE_MULTITHREADED ON)
 set(Boost_USE_STATIC_RUNTIME OFF)
 
-if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
-    if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows")
-        if(CMAKE_GENERATOR_PLATFORM STREQUAL  "Win32")
-            set(RUST_TARGET i686-pc-windows-msvc)
-        else()
-            set(RUST_TARGET x86_64-pc-windows-msvc)
-        endif()
-    else()
-        if(CMAKE_GENERATOR_PLATFORM STREQUAL  "Win32")
-            set(RUST_TARGET i686-pc-windows-gnu)
-        else()
-            set(RUST_TARGET x86_64-pc-windows-gnu)
-        endif()
-    endif()
-else()
-    set(RUST_TARGET x86_64-unknown-linux-gnu)
-endif()
-
 find_package(Boost REQUIRED)
 
 if(NOT CMAKE_SYSTEM_NAME STREQUAL "Windows")
@@ -83,14 +65,13 @@ ExternalProject_Add(esplugin
     URL_HASH ${ESPLUGIN_HASH}
     CONFIGURE_COMMAND ""
     BUILD_IN_SOURCE 1
-    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml --target ${RUST_TARGET} &&
+    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml &&
         cbindgen ffi/ -o ffi/include/esplugin.hpp
-    COMMAND ${CMAKE_COMMAND} -E rm -r "target/${RUST_TARGET}/release/deps" "target/release"
     INSTALL_COMMAND ""
-    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}esplugin_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}esplugin_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 ExternalProject_Get_Property(esplugin SOURCE_DIR)
 set(ESPLUGIN_INCLUDE_DIRS "${SOURCE_DIR}/ffi/include")
-set(ESPLUGIN_LIBRARIES "${SOURCE_DIR}/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}esplugin_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+set(ESPLUGIN_LIBRARIES "${SOURCE_DIR}/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}esplugin_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     set(ESPLUGIN_LIBRARIES ${ESPLUGIN_LIBRARIES} userenv ntdll)
 else()
@@ -108,14 +89,13 @@ ExternalProject_Add(libloadorder
     URL_HASH ${LIBLOADORDER_HASH}
     CONFIGURE_COMMAND ""
     BUILD_IN_SOURCE 1
-    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml --target ${RUST_TARGET} &&
+    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml &&
         cbindgen ffi/ -l c++ -o ffi/include/libloadorder.hpp
-    COMMAND ${CMAKE_COMMAND} -E rm -r "target/${RUST_TARGET}/release/deps" "target/release"
     INSTALL_COMMAND ""
-    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}loadorder_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}loadorder_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 ExternalProject_Get_Property(libloadorder SOURCE_DIR)
 set(LIBLOADORDER_INCLUDE_DIRS "${SOURCE_DIR}/ffi/include")
-set(LIBLOADORDER_LIBRARIES "${SOURCE_DIR}/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}loadorder_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+set(LIBLOADORDER_LIBRARIES "${SOURCE_DIR}/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}loadorder_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     set(LIBLOADORDER_LIBRARIES ${LIBLOADORDER_LIBRARIES} ntdll propsys userenv windowsapp)
 else()
@@ -133,14 +113,13 @@ ExternalProject_Add(loot-condition-interpreter
     URL_HASH ${LOOT_CONDITION_INTERPRETER_HASH}
     CONFIGURE_COMMAND ""
     BUILD_IN_SOURCE 1
-    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml --target ${RUST_TARGET} &&
+    BUILD_COMMAND cargo build --release --manifest-path ffi/Cargo.toml &&
         cbindgen ffi/ -o ffi/include/loot_condition_interpreter.h
-    COMMAND ${CMAKE_COMMAND} -E rm -r "target/${RUST_TARGET}/release/deps" "target/release"
     INSTALL_COMMAND ""
-    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}loot_condition_interpreter_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+    BUILD_BYPRODUCTS "<SOURCE_DIR>/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}loot_condition_interpreter_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 ExternalProject_Get_Property(loot-condition-interpreter SOURCE_DIR)
 set(LCI_INCLUDE_DIRS "${SOURCE_DIR}/ffi/include")
-set(LCI_LIBRARIES "${SOURCE_DIR}/target/${RUST_TARGET}/release/${CMAKE_STATIC_LIBRARY_PREFIX}loot_condition_interpreter_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
+set(LCI_LIBRARIES "${SOURCE_DIR}/target/release/${CMAKE_STATIC_LIBRARY_PREFIX}loot_condition_interpreter_ffi${CMAKE_STATIC_LIBRARY_SUFFIX}")
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     set(LCI_LIBRARIES ${LCI_LIBRARIES} userenv)
 else()
