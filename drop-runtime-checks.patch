diff -Nur polari-3.24.1.orig/configure polari-3.24.1/configure
--- polari-3.24.1.orig/configure	2017-05-20 02:27:51.788390386 +0200
+++ polari-3.24.1/configure	2017-05-20 02:31:07.440871539 +0200
@@ -17264,484 +17264,6 @@
 
 
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 3.0 of Gdk" >&5
-$as_echo_n "checking for version 3.0 of Gdk... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Gdk\"] = \"3.0\";
-      const Library = imports.gi.Gdk;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 3.0 of the GObject
-Introspection bindings for the Gdk library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search Gdk-3.0.typelib
-  dnf provides \*/Gdk-3.0.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 2.0 of GdkPixbuf" >&5
-$as_echo_n "checking for version 2.0 of GdkPixbuf... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"GdkPixbuf\"] = \"2.0\";
-      const Library = imports.gi.GdkPixbuf;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 2.0 of the GObject
-Introspection bindings for the GdkPixbuf library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search GdkPixbuf-2.0.typelib
-  dnf provides \*/GdkPixbuf-2.0.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Gio.Application.send_notification in Gio-2.0" >&5
-$as_echo_n "checking for Gio.Application.send_notification in Gio-2.0... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Gio\"] = \"2.0\";
-      const Library = imports.gi.Gio;
-      let symbols = \"Application.send_notification\".split('.');
-      function check_symbols(symbols_list) {
-        printerr('gjs: checking', symbols_list.join('.'));
-        try {
-          symbols_list.reduce(function (prev, curr) {
-            if (typeof prev[curr] === 'undefined')
-              throw 1;
-            return prev[curr];
-          }, Library);
-          return true;
-        } catch (e) {
-          if (e === 1)
-            return false;
-          throw e;
-        }
-      }
-      if (!check_symbols(symbols)) {
-                symbols.splice(-1, 0, 'prototype');
-        if (!check_symbols(symbols))
-          throw 1;
-      }
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "The symbol Gio.Application.send_notification was not importable
-in GJS, although the Gio library was present.
-Perhaps you need a newer version of the library?" "$LINENO" 5
-
-fi
-
-
-
-
-
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GLib.log_variant in GLib-2.0" >&5
-$as_echo_n "checking for GLib.log_variant in GLib-2.0... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"GLib\"] = \"2.0\";
-      const Library = imports.gi.GLib;
-      let symbols = \"log_variant\".split('.');
-      function check_symbols(symbols_list) {
-        printerr('gjs: checking', symbols_list.join('.'));
-        try {
-          symbols_list.reduce(function (prev, curr) {
-            if (typeof prev[curr] === 'undefined')
-              throw 1;
-            return prev[curr];
-          }, Library);
-          return true;
-        } catch (e) {
-          if (e === 1)
-            return false;
-          throw e;
-        }
-      }
-      if (!check_symbols(symbols)) {
-                symbols.splice(-1, 0, 'prototype');
-        if (!check_symbols(symbols))
-          throw 1;
-      }
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "The symbol GLib.log_variant was not importable
-in GJS, although the GLib library was present.
-Perhaps you need a newer version of the library?" "$LINENO" 5
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 2.0 of GObject" >&5
-$as_echo_n "checking for version 2.0 of GObject... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"GObject\"] = \"2.0\";
-      const Library = imports.gi.GObject;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 2.0 of the GObject
-Introspection bindings for the GObject library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search GObject-2.0.typelib
-  dnf provides \*/GObject-2.0.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Gspell.Entry in Gspell-1" >&5
-$as_echo_n "checking for Gspell.Entry in Gspell-1... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Gspell\"] = \"1\";
-      const Library = imports.gi.Gspell;
-      let symbols = \"Entry\".split('.');
-      function check_symbols(symbols_list) {
-        printerr('gjs: checking', symbols_list.join('.'));
-        try {
-          symbols_list.reduce(function (prev, curr) {
-            if (typeof prev[curr] === 'undefined')
-              throw 1;
-            return prev[curr];
-          }, Library);
-          return true;
-        } catch (e) {
-          if (e === 1)
-            return false;
-          throw e;
-        }
-      }
-      if (!check_symbols(symbols)) {
-                symbols.splice(-1, 0, 'prototype');
-        if (!check_symbols(symbols))
-          throw 1;
-      }
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "The symbol Gspell.Entry was not importable
-in GJS, although the Gspell library was present.
-Perhaps you need a newer version of the library?" "$LINENO" 5
-
-fi
-
-
-
-
-
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Gtk.ScrolledWindow.set_propagate_natural_width in Gtk-3.0" >&5
-$as_echo_n "checking for Gtk.ScrolledWindow.set_propagate_natural_width in Gtk-3.0... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Gtk\"] = \"3.0\";
-      const Library = imports.gi.Gtk;
-      let symbols = \"ScrolledWindow.set_propagate_natural_width\".split('.');
-      function check_symbols(symbols_list) {
-        printerr('gjs: checking', symbols_list.join('.'));
-        try {
-          symbols_list.reduce(function (prev, curr) {
-            if (typeof prev[curr] === 'undefined')
-              throw 1;
-            return prev[curr];
-          }, Library);
-          return true;
-        } catch (e) {
-          if (e === 1)
-            return false;
-          throw e;
-        }
-      }
-      if (!check_symbols(symbols)) {
-                symbols.splice(-1, 0, 'prototype');
-        if (!check_symbols(symbols))
-          throw 1;
-      }
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "The symbol Gtk.ScrolledWindow.set_propagate_natural_width was not importable
-in GJS, although the Gtk library was present.
-Perhaps you need a newer version of the library?" "$LINENO" 5
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 1.0 of Pango" >&5
-$as_echo_n "checking for version 1.0 of Pango... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Pango\"] = \"1.0\";
-      const Library = imports.gi.Pango;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 1.0 of the GObject
-Introspection bindings for the Pango library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search Pango-1.0.typelib
-  dnf provides \*/Pango-1.0.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 1.0 of PangoCairo" >&5
-$as_echo_n "checking for version 1.0 of PangoCairo... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"PangoCairo\"] = \"1.0\";
-      const Library = imports.gi.PangoCairo;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 1.0 of the GObject
-Introspection bindings for the PangoCairo library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search PangoCairo-1.0.typelib
-  dnf provides \*/PangoCairo-1.0.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 1 of Secret" >&5
-$as_echo_n "checking for version 1 of Secret... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Secret\"] = \"1\";
-      const Library = imports.gi.Secret;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 1 of the GObject
-Introspection bindings for the Secret library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search Secret-1.typelib
-  dnf provides \*/Secret-1.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 2.4 of Soup" >&5
-$as_echo_n "checking for version 2.4 of Soup... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"Soup\"] = \"2.4\";
-      const Library = imports.gi.Soup;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 2.4 of the GObject
-Introspection bindings for the Soup library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search Soup-2.4.typelib
-  dnf provides \*/Soup-2.4.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 0.12 of TelepathyGLib" >&5
-$as_echo_n "checking for version 0.12 of TelepathyGLib... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"TelepathyGLib\"] = \"0.12\";
-      const Library = imports.gi.TelepathyGLib;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 0.12 of the GObject
-Introspection bindings for the TelepathyGLib library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search TelepathyGLib-0.12.typelib
-  dnf provides \*/TelepathyGLib-0.12.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
-
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version 0.2 of TelepathyLogger" >&5
-$as_echo_n "checking for version 0.2 of TelepathyLogger... " >&6; }
-
-
-  echo "
-      imports.gi.versions[\"TelepathyLogger\"] = \"0.2\";
-      const Library = imports.gi.TelepathyLogger;
-    " >conftest.js
-  $GJS conftest.js >>config.log 2>&1
-  if test $? -eq 0; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-      as_fn_error $? "You do not have API version 0.2 of the GObject
-Introspection bindings for the TelepathyLogger library.
-Build a version from source, or find out what package to
-install with one of these commands, depending on your system:
-  apt-file search TelepathyLogger-0.2.typelib
-  dnf provides \*/TelepathyLogger-0.2.typelib
-" "$LINENO" 5
-
-
-fi
-
-
-
-
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
 $as_echo_n "checking whether ln -s works... " >&6; }
 LN_S=$as_ln_s
