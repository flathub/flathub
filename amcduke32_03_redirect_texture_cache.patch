diff --git a/source/build/include/texcache.h b/source/build/include/texcache.h
index a548cd18b..4ae5a3ab1 100644
--- a/source/build/include/texcache.h
+++ b/source/build/include/texcache.h
@@ -57,7 +57,7 @@ typedef struct {

 extern globaltexcache texcache;

-extern char TEXCACHEFILE[BMAX_PATH];
+extern std::string TEXCACHEFILE;

 extern int32_t texcache_enabled(void);
 extern void texcache_freeptrs(void);
 #endif // vfs_h_
diff --git a/source/build/src/texcache.cpp b/source/build/src/texcache.cpp
index e4aad2f0f..0b0026a1c 100644
--- a/source/build/src/texcache.cpp
+++ b/source/build/src/texcache.cpp
@@ -35,7 +35,8 @@

 globaltexcache texcache;

-char TEXCACHEFILE[BMAX_PATH] = "texturecache";
+std::string TEXCACHEFILE(get_writable_filename("texturecache").c_str());
+std::string TEXCACHE_INDEX(get_writable_filename("texturecache.index").c_str());

 static const char *texcache_errors[TEXCACHEERRORS] = {
     "no error",
@@ -306,10 +307,8 @@ static void texcache_deletefiles(void)
 {
     Bassert(!texcache.indexFilePtr && !texcache.dataFilePtr);

-    unlink(TEXCACHEFILE);
-    Bstrcpy(ptempbuf, TEXCACHEFILE);
-    Bstrcat(ptempbuf, ".index");
-    unlink(ptempbuf);
+    unlink(TEXCACHEFILE.c_str());
+    unlink(TEXCACHE_INDEX.c_str());
 }

 int32_t texcache_enabled(void)
@@ -334,17 +333,14 @@ void texcache_openfiles(void)
 {
     Bassert(!texcache.indexFilePtr && !texcache.dataFilePtr);

-    Bstrcpy(ptempbuf, TEXCACHEFILE);
-    Bstrcat(ptempbuf, ".index");
+    bool const texcache_exists = buildvfs_exists(TEXCACHE_INDEX.c_str());

-    bool const texcache_exists = buildvfs_exists(ptempbuf);
-
-    texcache.indexFilePtr = buildvfs_fopen_append(ptempbuf);
-    texcache.dataFilePtr  = buildvfs_fopen_append(TEXCACHEFILE);
+    texcache.indexFilePtr = buildvfs_fopen_append(TEXCACHE_INDEX.c_str());
+    texcache.dataFilePtr  = buildvfs_fopen_append(TEXCACHEFILE.c_str());

     if (!texcache.indexFilePtr || !texcache.dataFilePtr)
     {
-        LOG_F(ERROR, "Unable to open cache file %s or %s: %s.", TEXCACHEFILE, ptempbuf, strerror(errno));
+        LOG_F(ERROR, "Unable to open cache file %s or %s: %s.", TEXCACHEFILE.c_str(), TEXCACHE_INDEX.c_str(), strerror(errno));
         texcache_closefiles();
         glusetexcache = 0;
         return;
@@ -355,7 +351,7 @@ void texcache_openfiles(void)
         buildvfs_fputstr(texcache.indexFilePtr, "// automatically generated by the engine, DO NOT MODIFY!\n");
     }

-    LOG_F(INFO, "Opened %s as cache file.", TEXCACHEFILE);
+    LOG_F(INFO, "Opened %s as cache file.", TEXCACHEFILE.c_str());
 }


@@ -396,9 +392,7 @@ void texcache_invalidate(void)

 int texcache_loadoffsets(void)
 {
-    Bstrcpy(ptempbuf, TEXCACHEFILE);
-    Bstrcat(ptempbuf, ".index");
-    scriptfile *script = scriptfile_fromfile(ptempbuf);
+    scriptfile *script = scriptfile_fromfile(TEXCACHE_INDEX.c_str());

     if (!script) return -1;

diff --git a/source/duke3d/src/common.cpp b/source/duke3d/src/common.cpp
index 23ff2a81e..5f6d5ff4e 100644
--- a/source/duke3d/src/common.cpp
+++ b/source/duke3d/src/common.cpp
@@ -414,8 +414,8 @@ void G_LoadGroups(int32_t autoload)
         }

 #ifdef USE_OPENGL
-        Bsnprintf(path, sizeof(path), "%s/%s", g_modDir, TEXCACHEFILE);
-        Bstrcpy(TEXCACHEFILE, path);
+        Bsnprintf(path, sizeof(path), const_cast<char*>(TEXCACHEFILE.c_str()));
+        Bstrcpy(const_cast<char*>(TEXCACHEFILE.c_str()), path);
 #endif
     }
