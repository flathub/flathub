id: org.artisan_scope.artisan
runtime: org.kde.Platform
sdk: org.kde.Sdk
runtime-version: '6.7'

base: com.riverbankcomputing.PyQt.BaseApp
base-version: '6.7'
cleanup-commands:
  # deduplicate (matplotlib) fonts already in runtime
  - for f in /usr/share/fonts/dejavu/*.ttf; do find /app -name `basename $f` -execdir ln -sf "$f" \; ; done
  # remove Python test suites
  - find $FLATPAK_DEST/lib/python* -type d -name tests | xargs rm -Rf
  # Yoctupuce includes compiled libraries of various platforms *sigh*, only keep what we need
  - |
    python3 <<EOF
    from os import listdir, remove
    from os.path import basename, dirname, join
    from yoctopuce.yocto_api import YAPI
    YAPI.yloadYapiCDLL()
    dir = dirname(YAPI._yApiCLibFile)
    keep = [basename(f) for f in [YAPI._yApiCLibFile]] # might include YAPI._yApiCLibFileFallback
    [remove(join(dir, f)) for f in listdir(dir) if f not in keep]
    EOF
  # cleanup QtWebEngine dictionaries, which we don't need and use quite some space
  - find $FLATPAK_DEST/share/locale -name \*.bdic | xargs rm -f
  - rm -Rf $FLATPAK_DEST/qtwebengine_dictionaries
  # we need no QtWebEngine developer tools, nor automation driver
  - rm -f $FLATPAK_DEST/resources/qtwebengine_devtools_resources.pak
  - rm -Rf $FLATPAK_DEST/libexec/webenginedriver
  # cleanup base
  - /app/cleanup-BaseApp.sh

command: artisan
separate-locales: false
finish-args:
  # Qt
  - --share=ipc
  - --socket=fallback-x11
  - --socket=wayland
  #- --device=dri # we already have --device=all
  # USB
  - --device=all
  # allow network access for network devices and artisan.plus
  - --share=network
  # storing and retrieving artisan.plus credentials
  - --talk-name=org.freedesktop.secrets
  # filesystem access needed for autosave
  - --filesystem=xdg-documents
  # required for QtWebEngine
  - --env=QTWEBENGINEPROCESS_PATH=/app/bin/QtWebEngineProcess

modules:
  - ./shared-modules/libusb/libusb.json

  - name: phidgets
    buildsystem: autotools
    sources:
      - type: archive
        url: https://www.phidgets.com/downloads/phidget22/libraries/linux/libphidget22/libphidget22-1.19.20240411.tar.gz
        sha256: 983a1856cd0b8416f7fafcca8f362bf4499caf3b66038732f7187938dc476b12
        x-checker-data:
          type: html
          url: https://www.phidgets.com/downloads/phidget22/libraries/linux/libphidget22/
          pattern: <a href="(libphidget22-([0-9.]+)\.tar\.gz)">

  - name: qhull
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_STATIC_LIBS=OFF
      #- -DBUILD_APPLICATIONS=OFF for qhull 8.1+
    sources:
      - type: archive
        url: http://www.qhull.org/download/qhull-2020-src-8.0.2.tgz
        sha256: b5c2d7eb833278881b952c8a52d20179eab87766b00b865000469a45c1838b7e
    cleanup:
      - "/bin" # when using as library
      - "/share/man"
      - "/share/doc"

  - ./dep-python3-wheels-run.json
  - ./dep-python3-wheels-build.json
  - ./dep-python3-source.json

  - name: artisan
    buildsystem: simple
    build-commands:
      # install without application bundle with dependencies
      - sed -i 's/^\s*\(pyinstaller\|rm -rf dist\)/#\1/' src/build-linux.sh
      - mkdir -p src/dist/artisan && touch src/dist/artisan/__dummy__
      - cd src && PATH=/var/data/python/bin:$PATH ./build-linux.sh
      - rm -f $FLATPAK_DEST/__dummy__
      # copy all gathered files to the destination
      - mkdir $FLATPAK_DEST/includes
      - cp -Rp src/dist/* $FLATPAK_DEST/includes
      - mv $FLATPAK_DEST/includes/translations/* $FLATPAK_DEST/translations
      - rmdir $FLATPAK_DEST/includes/translations
      # and also the Python files
      - cp -Rp src/{artisan.py,artisanlib,plus,proto,help,uic,misc} $FLATPAK_DEST
      - chmod a+x $FLATPAK_DEST/artisan.py
      # then compile all Python files
      - python3 -m compileall $FLATPAK_DEST/{artisanlib,plus,proto,help,uic,misc}
      # Flatpak expects Qt plugins in lib/plugins/ instead of plugins/
      - ln -s ../plugins $FLATPAK_DEST/lib/
      # desktop integration
      - ln -s /app/artisan.py /app/bin/artisan
      - mkdir -p $FLATPAK_DEST/share/{metainfo,applications,icons/hicolor/scalable/apps}
      - install -Dm644 src/artisan.svg $FLATPAK_DEST/share/icons/hicolor/scalable/apps/$FLATPAK_ID.svg
      - install -Dm644 src/debian/usr/share/metainfo/$FLATPAK_ID.metainfo.xml $FLATPAK_DEST/share/metainfo/
      - install -Dm644 src/debian/usr/share/applications/$FLATPAK_ID.desktop $FLATPAK_DEST/share/applications/
      - desktop-file-edit --set-icon=$FLATPAK_ID $FLATPAK_DEST/share/applications/$FLATPAK_ID.desktop
    sources:
      - type: archive
        dest-filename: artisan.tar.gz
        url: https://api.github.com/repos/artisan-roaster-scope/artisan/tarball/v3.0.0
        sha256: f99ab0ebb70ef6ad7730b03f25bf4726df9ef5a54c8b889832b583f967c5dba6
        x-checker-data:
          type: json
          url: https://api.github.com/repos/artisan-roaster-scope/artisan/releases/latest
          version-query: .tag_name | sub("^v"; "")
          url-query: .tarball_url
      - type: patch
        path: artisan-translations-path.diff
      - type: patch
        path: artisan-metainfo-release-v3.diff
