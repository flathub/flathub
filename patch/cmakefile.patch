diff --git a/app/CMakeLists.txt b/app/CMakeLists.txt
index e69150cd..dcd689f3 100644
--- a/app/CMakeLists.txt
+++ b/app/CMakeLists.txt
@@ -257,90 +257,10 @@ elseif(APPLE)
   MACOSX_BUNDLE_INFO_PLIST ${INFO_MACOSX}
  )
 elseif(UNIX)
- install(TARGETS ${PROJECT_EXECUTABLE} RUNTIME DESTINATION /usr/bin)
-
- install(
-  FILES ${CMAKE_CURRENT_SOURCE_DIR}/deploy/linux/serial-studio.png
-  DESTINATION /usr/share/pixmaps
- )
+ install(TARGETS ${PROJECT_EXECUTABLE} RUNTIME DESTINATION bin)
 
 install(
  FILES ${CMAKE_CURRENT_SOURCE_DIR}/deploy/linux/serial-studio.desktop
- DESTINATION /usr/share/applications
+ DESTINATION share/applications
 )
 endif()
-
-#-------------------------------------------------------------------------------
-# Qt Deployment
-#-------------------------------------------------------------------------------
-
-qt_finalize_executable(${PROJECT_EXECUTABLE})
-
-install(
- TARGETS ${PROJECT_EXECUTABLE}
- BUNDLE  DESTINATION .
- RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-)
-
-set(deploy_tool_options_arg "")
-if(APPLE)
- set(deploy_tool_options_arg -hardened-runtime -appstore-compliant)
-elseif(WIN32)
- set(deploy_tool_options_arg --no-compiler-runtime -force-openssl --release)
-endif()
-
-qt_generate_deploy_qml_app_script(
- TARGET ${PROJECT_EXECUTABLE}
- OUTPUT_SCRIPT deploy_script
- MACOS_BUNDLE_POST_BUILD
- NO_UNSUPPORTED_PLATFORM_ERROR
- DEPLOY_USER_QML_MODULES_ON_UNSUPPORTED_PLATFORM
- DEPLOY_TOOL_OPTIONS ${deploy_tool_options_arg}
-)
-
-install(SCRIPT ${deploy_script})
-
-#-------------------------------------------------------------------------------
-# Packaging
-#-------------------------------------------------------------------------------
-
-set(CPACK_PACKAGE_NAME                  ${PROJECT_DISPNAME})
-set(CPACK_PACKAGE_CONTACT               ${PROJECT_CONTACT})
-set(CPACK_PACKAGE_VENDOR                ${PROJECT_VENDOR})
-set(CPACK_PACKAGE_DESCRIPTION_SUMMARY   ${PROJECT_DESCRIPTION_SUMMARY})
-set(CPACK_PACKAGE_VERSION_MAJOR         ${PROJECT_VERSION_MAJOR})
-set(CPACK_PACKAGE_VERSION_MINOR         ${PROJECT_VERSION_MINOR})
-set(CPACK_PACKAGE_VERSION_PATCH         ${PROJECT_VERSION_PATCH})
-set(CPACK_PACKAGE_DESCRIPTION_FILE      ${PROJECT_DESCRIPTION_FILE})
-set(CPACK_PACKAGE_FILE_NAME             ${PROJECT_FILE_NAME})
-set(CPACK_RESOURCE_FILE_LICENSE         ${PROJECT_FILE_LICENSE})
-
-set(CPACK_MONOLITHIC_INSTALL OFF)
-
-if(WIN32)
- set(CPACK_PACKAGE_ICON              "${CMAKE_CURRENT_SOURCE_DIR}\\\\deploy\\\\windows\\\\icon.ico")
- set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}")
-else()
- set(CPACK_PACKAGE_ICON              "${CMAKE_CURRENT_SOURCE_DIR}/deploy/icon.png")
- set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}")
-endif()
-
-if(NOT CPACK_GENERATOR)
- if(WIN32)
-  set(CPACK_GENERATOR                             "NSIS")
-  set(CPACK_NSIS_MANIFEST_DPI_AWARE               ON)
-  set(CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL  ON)
-  set(CPACK_NSIS_DISPLAY_NAME                     "${CPACK_PACKAGE_NAME}")
-  set(CPACK_NSIS_MUI_FINISHPAGE_RUN               "${PROJECT_EXECUTABLE}")
-  set(CPACK_NSIS_INSTALLED_ICON_NAME              "$INSTDIR\\\\bin\\\\${PROJECT_EXECUTABLE}.exe")
-  set(CPACK_NSIS_MUI_ICON                         "${CMAKE_CURRENT_SOURCE_DIR}\\\\deploy\\\\windows\\\\icon.ico")
-  set(CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS         "Delete '$SMPROGRAMS\\\\${PROJECT_DISPNAME}.lnk'")
-  set(CPACK_NSIS_EXTRA_INSTALL_COMMANDS           "CreateShortCut '$SMPROGRAMS\\\\${PROJECT_DISPNAME}.lnk' '$INSTDIR\\\\bin\\\\${PROJECT_EXECUTABLE}.exe'")
- elseif(APPLE)
-  set(CPACK_GENERATOR                             "DragNDrop")
- else()
-  set(CPACK_GENERATOR                             "TGZ")
- endif()
-endif()
-
-include(CPack)
