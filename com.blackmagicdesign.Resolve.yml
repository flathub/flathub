id: com.blackmagicdesign.Resolve
runtime: org.freedesktop.Platform
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
command: resolve.sh
finish-args:
  - --share=ipc
  - --share=network
  - --socket=pulseaudio
  - --socket=x11
  - --device=dri
  - --filesystem=xdg-documents
  - --filesystem=xdg-videos

modules:
  - shared-modules/glu/glu-9.json
  - name: resolve
    buildsystem: simple
    build-commands:
      - install -Dm755 resolve.sh /app/bin/resolve.sh
      - install -Dm755 com.blackmagicdesign.Resolve.desktop /app/share/applications/com.blackmagicdesign.Resolve.desktop
      - install -Dm644 com.blackmagicdesign.Resolve.png /app/share/icons/hicolor/scalable/apps/com.blackmagicdesign.Resolve.png
      - install -Dm644 com.blackmagicdesign.Resolve.appdata.xml /app/share/metainfo/com.blackmagicdesign.Resolve.appdata.xml
      - cat Davinci_Resolve_19.0.1_Linux_part_* > archive.tar
      - tar -xvf archive.tar
      - ./setup.sh
    sources:
      - type: script
        dest-filename: resolve.sh
        commands:
          - export BMD_RESOLVE_CONFIG_DIR="${XDG_CONFIG_HOME}"
          - export BMD_RESOLVE_LICENSE_DIR="${XDG_DATA_HOME}/license"
          - export BMD_RESOLVE_LOGS_DIR="${XDG_DATA_HOME}/logs"
          - exec /app/bin/resolve $@
      - type: script
        dest-filename: setup.sh
        commands:
          - PREFIX='/app'
          - STUDIO='false'
          - APP_ID="com.blackmagicdesign.Resolve"
          - APP_DESCRIPTION="DaVinci Resolve"
          - |
            if ${STUDIO}; then
              APP_ID="com.blackmagicdesign.ResolveStudio"
              APP_DESCRIPTION="DaVinci Resolve Studio"
            fi
          - ./DaVinci_Resolve_*_Linux.run --appimage-extract 2>&1
          - rm ./DaVinci_Resolve_*_Linux.run
          - find squashfs-root -type f -exec chmod a+r,u+w {} \;
          - find squashfs-root -type d -exec chmod a+rx,u+w {} \;
          - mkdir -p ${PREFIX}/easyDCP ${PREFIX}/scripts ${PREFIX}/share ${PREFIX}/Fairlight ${PREFIX}/share/applications ${PREFIX}/share/icons/hicolor/128x128/apps ${PREFIX}/share/icons/hicolor/256x256/apps
          - chmod 755 ${PREFIX}/easyDCP ${PREFIX}/scripts ${PREFIX}/share ${PREFIX}/Fairlight ${PREFIX}/share/applications ${PREFIX}/share/icons/hicolor/128x128/apps ${PREFIX}/share/icons/hicolor/256x256/apps
          - cp -rp squashfs-root/bin ${PREFIX}/
          - cp -rp squashfs-root/Control ${PREFIX}/
          - cp -rp squashfs-root/Certificates ${PREFIX}/
          - cp -rp squashfs-root/DaVinci\ Control\ Panels\ Setup ${PREFIX}/
          - cp -rp squashfs-root/Developer ${PREFIX}/
          - cp -rp squashfs-root/docs ${PREFIX}/
          - cp -rp squashfs-root/Fairlight\ Studio\ Utility ${PREFIX}/
          - cp -rp squashfs-root/Fusion ${PREFIX}/
          - cp -rp squashfs-root/graphics ${PREFIX}/
          - cp -rp squashfs-root/libs ${PREFIX}/
          - cp -rp squashfs-root/LUT ${PREFIX}/
          - cp -rp squashfs-root/Onboarding ${PREFIX}/
          - cp -rp squashfs-root/plugins ${PREFIX}/
          - cp -rp squashfs-root/Technical\ Documentation ${PREFIX}/
          - cp -rp squashfs-root/UI_Resource ${PREFIX}/
          - cp -rp squashfs-root/scripts/script.checkfirmware ${PREFIX}/scripts/
          - cp -rp squashfs-root/scripts/script.getlogs.v4 ${PREFIX}/scripts/
          - cp -rp squashfs-root/scripts/script.start ${PREFIX}/scripts/
          - cp -rp squashfs-root/share/default-config.dat ${PREFIX}/share/
          - cp -rp squashfs-root/share/default_cm_config.bin ${PREFIX}/share/
          - cp -rp squashfs-root/share/log-conf.xml ${PREFIX}/share/
          - |
            if [[ -e squashfs-root/share/remote-monitoring-log-conf.xml ]]; then
                cp -rp squashfs-root/share/remote-monitoring-log-conf.xml ${PREFIX}/share/
            fi
          - tar -xzvf squashfs-root/share/panels/dvpanel-framework-linux-x86_64.tgz -C ${PREFIX}/libs libDaVinciPanelAPI.so libFairlightPanelAPI.so
          - mkdir -p ${PREFIX}/bin/BlackmagicRawAPI/
          - ln -s ../libs/libBlackmagicRawAPI.so ${PREFIX}/bin/libBlackmagicRawAPI.so
          - ln -s ../../libs/libBlackmagicRawAPI.so ${PREFIX}/bin/BlackmagicRawAPI/libBlackmagicRawAPI.so
          - |
            if [[ -e squashfs-root/BlackmagicRAWPlayer ]]; then
                echo "Adding BlackmagicRAWPlayer"

                cp -rp squashfs-root/BlackmagicRAWPlayer ${PREFIX}
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RAWPlayer.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=Blackmagic RAW Player
                Exec=/app/BlackmagicRAWPlayer/BlackmagicRAWPlayer
                Icon=${APP_ID}.RAWPlayer
                Terminal=false
                MimeType=application/x-braw-clip;application/x-braw-sidecar
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -p squashfs-root/graphics/blackmagicraw-player_256x256_apps.png ${PREFIX}/share/icons/hicolor/256x256/apps/${APP_ID}.RAWPlayer.png
            fi
          - |
            if [[ -e squashfs-root/BlackmagicRAWSpeedTest ]]; then
                echo "Adding BlackmagicRAWSpeedTest"

                cp -rp squashfs-root/BlackmagicRAWSpeedTest ${PREFIX}
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RAWSpeedTest.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=Blackmagic RAW Speed Test
                Exec=/app/BlackmagicRAWSpeedTest/BlackmagicRAWSpeedTest
                Icon=${APP_ID}.RAWSpeedTest
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -p squashfs-root/graphics/blackmagicraw-speedtest_256x256_apps.png ${PREFIX}/share/icons/hicolor/256x256/apps/${APP_ID}.RAWSpeedTest.png
            fi
          - |
            cat <<EOF > ${PREFIX}/share/applications/${APP_ID}.desktop
            [Desktop Entry]
            Version=1.0
            Type=Application
            Name=${APP_DESCRIPTION}
            Name[en_US]=${APP_DESCRIPTION}
            GenericName=${APP_DESCRIPTION}
            Comment=Revolutionary new tools for editing, visual effects, color correction and professional audio post production, all in a single application!
            Exec=/app/bin/resolve.sh %U
            Icon=${APP_ID}
            Terminal=false
            MimeType=application/x-resolveproj;
            StartupNotify=true
            Categories=AudioVideo
            EOF
          - cp -rp squashfs-root/graphics/DV_Resolve.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.png
          - |
            if [[ -e "${PREFIX}/DaVinci Control Panels Setup/DaVinci Control Panels Setup" ]]; then
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.PanelSetup.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=DaVinci Resolve Panels Setup
                Exec="/app/DaVinci Resolve Panels Setup/DaVinci Resolve Panels Setup"
                Icon=${APP_ID}.PanelSetup.png
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -rp squashfs-root/graphics/DV_Panels.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.PanelSetup.png
            fi
          - |
            if [[ -e "${PREFIX}/bin/DaVinci Remote Monitoring" ]]; then
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RemoteMonitoring.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=DaVinci Remote Monitoring
                Exec="/app/bin/DaVinci Remote Monitoring"
                Icon=${APP_ID}.RemoteMonitoring
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -rp squashfs-root/graphics/Remote_Monitoring.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.RemoteMonitoring.png
            fi

      - type: file
        path: com.blackmagicdesign.Resolve.desktop
      - type: file
        path: com.blackmagicdesign.Resolve.png
      - type: file
        path: com.blackmagicdesign.Resolve.appdata.xml
      - type: file
        url: https://github.com/jolygmanka/filehost/releases/download/addfile2/Davinci_Resolve_19.0.1_Linux_part_aa
        sha256: e273ce1a65c321b8483830ca708aeca41207c774483fc3a909208dccd879ca20
      - type: file
        url: https://github.com/jolygmanka/filehost/releases/download/addfile2/Davinci_Resolve_19.0.1_Linux_part_ab
        sha256: e73b5560cb1356f96935bb5f805f596792016035175573f3725ab92b4d63d0ea
